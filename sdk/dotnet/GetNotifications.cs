// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec
{
    public static class GetNotifications
    {
        public static Task<GetNotificationsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNotificationsResult>("aquasec:index/getNotifications:getNotifications", InvokeArgs.Empty, options.WithDefaults());

        public static Output<GetNotificationsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNotificationsResult>("aquasec:index/getNotifications:getNotifications", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetNotificationsResult
    {
        public readonly ImmutableArray<Outputs.GetNotificationsEmailResult> Emails;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNotificationsJiraResult> Jiras;
        public readonly ImmutableArray<Outputs.GetNotificationsServicenowResult> Servicenows;
        public readonly ImmutableArray<Outputs.GetNotificationsSlackResult> Slacks;
        public readonly ImmutableArray<Outputs.GetNotificationsSplunkResult> Splunks;
        public readonly ImmutableArray<Outputs.GetNotificationsTeamResult> Teams;
        public readonly ImmutableArray<Outputs.GetNotificationsWebhookResult> Webhooks;

        [OutputConstructor]
        private GetNotificationsResult(
            ImmutableArray<Outputs.GetNotificationsEmailResult> emails,

            string id,

            ImmutableArray<Outputs.GetNotificationsJiraResult> jiras,

            ImmutableArray<Outputs.GetNotificationsServicenowResult> servicenows,

            ImmutableArray<Outputs.GetNotificationsSlackResult> slacks,

            ImmutableArray<Outputs.GetNotificationsSplunkResult> splunks,

            ImmutableArray<Outputs.GetNotificationsTeamResult> teams,

            ImmutableArray<Outputs.GetNotificationsWebhookResult> webhooks)
        {
            Emails = emails;
            Id = id;
            Jiras = jiras;
            Servicenows = servicenows;
            Slacks = slacks;
            Splunks = splunks;
            Teams = teams;
            Webhooks = webhooks;
        }
    }
}
