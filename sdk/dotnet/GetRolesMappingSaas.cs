// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec
{
    public static class GetRolesMappingSaas
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aquasec = Pulumi.Aquasec;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var rolesMappingSaas = Aquasec.GetRolesMappingSaas.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["roleMapping"] = rolesMappingSaas.Apply(getRolesMappingSaasResult =&gt; getRolesMappingSaasResult.RolesMappings),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRolesMappingSaasResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRolesMappingSaasResult>("aquasec:index/getRolesMappingSaas:getRolesMappingSaas", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetRolesMappingSaasResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetRolesMappingSaasRolesMappingResult> RolesMappings;

        [OutputConstructor]
        private GetRolesMappingSaasResult(
            string id,

            ImmutableArray<Outputs.GetRolesMappingSaasRolesMappingResult> rolesMappings)
        {
            Id = id;
            RolesMappings = rolesMappings;
        }
    }
}
