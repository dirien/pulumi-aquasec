// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec.Inputs
{

    public sealed class AcknowledgeIssueArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The user who acknowledged the issue.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// The date and time of the acknowledgment.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        [Input("dockerId")]
        public Input<string>? DockerId { get; set; }

        /// <summary>
        /// The current dat and time when the expiration was set
        /// </summary>
        [Input("expirationConfiguredAt")]
        public Input<string>? ExpirationConfiguredAt { get; set; }

        /// <summary>
        /// The user who set the expiration of the issue.
        /// </summary>
        [Input("expirationConfiguredBy")]
        public Input<string>? ExpirationConfiguredBy { get; set; }

        /// <summary>
        /// Number of days until expiration of the acknowledgement. The value must be integer from 1 to 999, inclusive.
        /// </summary>
        [Input("expirationDays")]
        public Input<int>? ExpirationDays { get; set; }

        /// <summary>
        /// The version of the package that having a fix for the issue.
        /// </summary>
        [Input("fixVersion")]
        public Input<string>? FixVersion { get; set; }

        /// <summary>
        /// Only acknowledge the issue in the context of the specified image (also requires 'registry_name')
        /// </summary>
        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        /// <summary>
        /// The name of the security issue (the CVE or security advisory for vulnerabilities, name of malware or type of sensitive data)
        /// </summary>
        [Input("issueName", required: true)]
        public Input<string> IssueName { get; set; } = null!;

        /// <summary>
        /// The type of the security issue (either 'vulnerability', 'sensitive_data' or 'malware')
        /// </summary>
        [Input("issueType", required: true)]
        public Input<string> IssueType { get; set; } = null!;

        /// <summary>
        /// When the resource_type is 'package', the operating system is required (e.g., 'ubuntu', 'alpine').
        /// </summary>
        [Input("os")]
        public Input<string>? Os { get; set; }

        /// <summary>
        /// When the resource_type is 'package', the operating system version is required.
        /// </summary>
        [Input("osVersion")]
        public Input<string>? OsVersion { get; set; }

        /// <summary>
        /// The permissions of the user who acknowledged the issue.
        /// </summary>
        [Input("permission")]
        public Input<string>? Permission { get; set; }

        /// <summary>
        /// Only acknowledge the issue in the context of the specified repository (also requires 'registry_name').
        /// </summary>
        [Input("registryName")]
        public Input<string>? RegistryName { get; set; }

        /// <summary>
        /// The CPE of the resource as listed in the issue by the Aqua API. This is required for resources of type 'executable'. For packages and files, the next parameters can be specified instead.
        /// </summary>
        [Input("resourceCpe")]
        public Input<string>? ResourceCpe { get; set; }

        /// <summary>
        /// The format of the resource.
        /// </summary>
        [Input("resourceFormat")]
        public Input<string>? ResourceFormat { get; set; }

        /// <summary>
        /// When the resource_type is 'file', the hash of the file is required
        /// </summary>
        [Input("resourceHash")]
        public Input<string>? ResourceHash { get; set; }

        /// <summary>
        /// When the resource_type is 'package', the name of the package is required.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// The path of the resource. This is required for resources of type 'file' and 'executable'.
        /// </summary>
        [Input("resourcePath")]
        public Input<string>? ResourcePath { get; set; }

        /// <summary>
        /// The type of the resource where the issue was detected (either 'package', 'file' or 'executable')
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        /// <summary>
        /// When the resource_type is 'package', the version of the package is required
        /// </summary>
        [Input("resourceVersion")]
        public Input<string>? ResourceVersion { get; set; }

        public AcknowledgeIssueArgs()
        {
        }
        public static new AcknowledgeIssueArgs Empty => new AcknowledgeIssueArgs();
    }
}
