// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec.Inputs
{

    public sealed class ApplicationScopeCategoryGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("artifacts")]
        private InputList<Inputs.ApplicationScopeCategoryArtifactGetArgs>? _artifacts;

        /// <summary>
        /// An artifact is an application. It can be an image (for a container, not a CF application); a serverless function; or a Tanzu Application Service (TAS) droplet.
        /// </summary>
        public InputList<Inputs.ApplicationScopeCategoryArtifactGetArgs> Artifacts
        {
            get => _artifacts ?? (_artifacts = new InputList<Inputs.ApplicationScopeCategoryArtifactGetArgs>());
            set => _artifacts = value;
        }

        [Input("entityScopes")]
        private InputList<Inputs.ApplicationScopeCategoryEntityScopeGetArgs>? _entityScopes;
        public InputList<Inputs.ApplicationScopeCategoryEntityScopeGetArgs> EntityScopes
        {
            get => _entityScopes ?? (_entityScopes = new InputList<Inputs.ApplicationScopeCategoryEntityScopeGetArgs>());
            set => _entityScopes = value;
        }

        [Input("infrastructures")]
        private InputList<Inputs.ApplicationScopeCategoryInfrastructureGetArgs>? _infrastructures;

        /// <summary>
        /// An infrastructure resource is an element of a computing environment on which a workload is orchestrated and run. It can be a host (VM) or a Kubernetes cluster.
        /// </summary>
        public InputList<Inputs.ApplicationScopeCategoryInfrastructureGetArgs> Infrastructures
        {
            get => _infrastructures ?? (_infrastructures = new InputList<Inputs.ApplicationScopeCategoryInfrastructureGetArgs>());
            set => _infrastructures = value;
        }

        [Input("workloads")]
        private InputList<Inputs.ApplicationScopeCategoryWorkloadGetArgs>? _workloads;

        /// <summary>
        /// A workload is a running container. It can run in a Kubernetes cluster, on a VM (no orchestrator), or under Tanzu Application Service (TAS).
        /// </summary>
        public InputList<Inputs.ApplicationScopeCategoryWorkloadGetArgs> Workloads
        {
            get => _workloads ?? (_workloads = new InputList<Inputs.ApplicationScopeCategoryWorkloadGetArgs>());
            set => _workloads = value;
        }

        public ApplicationScopeCategoryGetArgs()
        {
        }
        public static new ApplicationScopeCategoryGetArgs Empty => new ApplicationScopeCategoryGetArgs();
    }
}
