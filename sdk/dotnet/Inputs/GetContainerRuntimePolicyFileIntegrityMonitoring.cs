// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec.Inputs
{

    public sealed class GetContainerRuntimePolicyFileIntegrityMonitoringArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true, file integrity monitoring is enabled.
        /// </summary>
        [Input("enabled")]
        public bool? Enabled { get; set; }

        [Input("exceptionalMonitoredFiles")]
        private List<string>? _exceptionalMonitoredFiles;

        /// <summary>
        /// List of paths to be excluded from monitoring.
        /// </summary>
        public List<string> ExceptionalMonitoredFiles
        {
            get => _exceptionalMonitoredFiles ?? (_exceptionalMonitoredFiles = new List<string>());
            set => _exceptionalMonitoredFiles = value;
        }

        [Input("exceptionalMonitoredFilesProcesses")]
        private List<string>? _exceptionalMonitoredFilesProcesses;

        /// <summary>
        /// List of processes to be excluded from monitoring.
        /// </summary>
        public List<string> ExceptionalMonitoredFilesProcesses
        {
            get => _exceptionalMonitoredFilesProcesses ?? (_exceptionalMonitoredFilesProcesses = new List<string>());
            set => _exceptionalMonitoredFilesProcesses = value;
        }

        [Input("exceptionalMonitoredFilesUsers")]
        private List<string>? _exceptionalMonitoredFilesUsers;

        /// <summary>
        /// List of users to be excluded from monitoring.
        /// </summary>
        public List<string> ExceptionalMonitoredFilesUsers
        {
            get => _exceptionalMonitoredFilesUsers ?? (_exceptionalMonitoredFilesUsers = new List<string>());
            set => _exceptionalMonitoredFilesUsers = value;
        }

        [Input("monitoredFiles")]
        private List<string>? _monitoredFiles;

        /// <summary>
        /// List of paths to be monitored.
        /// </summary>
        public List<string> MonitoredFiles
        {
            get => _monitoredFiles ?? (_monitoredFiles = new List<string>());
            set => _monitoredFiles = value;
        }

        /// <summary>
        /// Whether to monitor file attribute operations.
        /// </summary>
        [Input("monitoredFilesAttributes")]
        public bool? MonitoredFilesAttributes { get; set; }

        /// <summary>
        /// Whether to monitor file create operations.
        /// </summary>
        [Input("monitoredFilesCreate")]
        public bool? MonitoredFilesCreate { get; set; }

        /// <summary>
        /// Whether to monitor file delete operations.
        /// </summary>
        [Input("monitoredFilesDelete")]
        public bool? MonitoredFilesDelete { get; set; }

        /// <summary>
        /// Whether to monitor file modify operations.
        /// </summary>
        [Input("monitoredFilesModify")]
        public bool? MonitoredFilesModify { get; set; }

        [Input("monitoredFilesProcesses")]
        private List<string>? _monitoredFilesProcesses;

        /// <summary>
        /// List of processes associated with monitored files.
        /// </summary>
        public List<string> MonitoredFilesProcesses
        {
            get => _monitoredFilesProcesses ?? (_monitoredFilesProcesses = new List<string>());
            set => _monitoredFilesProcesses = value;
        }

        /// <summary>
        /// Whether to monitor file read operations.
        /// </summary>
        [Input("monitoredFilesRead")]
        public bool? MonitoredFilesRead { get; set; }

        [Input("monitoredFilesUsers")]
        private List<string>? _monitoredFilesUsers;

        /// <summary>
        /// List of users associated with monitored files.
        /// </summary>
        public List<string> MonitoredFilesUsers
        {
            get => _monitoredFilesUsers ?? (_monitoredFilesUsers = new List<string>());
            set => _monitoredFilesUsers = value;
        }

        public GetContainerRuntimePolicyFileIntegrityMonitoringArgs()
        {
        }
        public static new GetContainerRuntimePolicyFileIntegrityMonitoringArgs Empty => new GetContainerRuntimePolicyFileIntegrityMonitoringArgs();
    }
}
