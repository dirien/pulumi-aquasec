// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec.Inputs
{

    public sealed class ImageVulnerabilityGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("ackAuthor")]
        public Input<string>? AckAuthor { get; set; }

        [Input("ackComment")]
        public Input<string>? AckComment { get; set; }

        [Input("ackExpirationConfiguredAt")]
        public Input<string>? AckExpirationConfiguredAt { get; set; }

        [Input("ackExpirationConfiguredBy")]
        public Input<string>? AckExpirationConfiguredBy { get; set; }

        [Input("ackExpirationDays")]
        public Input<int>? AckExpirationDays { get; set; }

        [Input("ackScope")]
        public Input<string>? AckScope { get; set; }

        [Input("acknowledgeDate")]
        public Input<string>? AcknowledgeDate { get; set; }

        /// <summary>
        /// The ancestor of this package.
        /// </summary>
        [Input("ancestorPkg")]
        public Input<string>? AncestorPkg { get; set; }

        /// <summary>
        /// The score generated for the vulnerability by Aqua.
        /// </summary>
        [Input("aquaScore")]
        public Input<double>? AquaScore { get; set; }

        /// <summary>
        /// Score classification by Aqua.
        /// </summary>
        [Input("aquaScoreClassification")]
        public Input<string>? AquaScoreClassification { get; set; }

        /// <summary>
        /// The score system for the vulnerability by Aqua
        /// </summary>
        [Input("aquaScoringSystem")]
        public Input<string>? AquaScoringSystem { get; set; }

        /// <summary>
        /// The severity generated for the vulnerability by Aqua.
        /// </summary>
        [Input("aquaSeverity")]
        public Input<string>? AquaSeverity { get; set; }

        /// <summary>
        /// Classification of the severity defined by Aqua.
        /// </summary>
        [Input("aquaSeverityClassification")]
        public Input<string>? AquaSeverityClassification { get; set; }

        /// <summary>
        /// The vectors generated for the vulnerability by Aqua
        /// </summary>
        [Input("aquaVectors")]
        public Input<string>? AquaVectors { get; set; }

        /// <summary>
        /// Number of audit events.
        /// </summary>
        [Input("auditEventsCount")]
        public Input<int>? AuditEventsCount { get; set; }

        /// <summary>
        /// Number of blocked events.
        /// </summary>
        [Input("blockEventsCount")]
        public Input<int>? BlockEventsCount { get; set; }

        /// <summary>
        /// Classification of the vulnerability.
        /// </summary>
        [Input("classification")]
        public Input<string>? Classification { get; set; }

        /// <summary>
        /// The description of the vulnerability.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The content digest of the image.
        /// </summary>
        [Input("digest")]
        public Input<string>? Digest { get; set; }

        /// <summary>
        /// Reference of the exploit.
        /// </summary>
        [Input("exploitReference")]
        public Input<string>? ExploitReference { get; set; }

        /// <summary>
        /// Type of the exploit.
        /// </summary>
        [Input("exploitType")]
        public Input<string>? ExploitType { get; set; }

        /// <summary>
        /// The date when this vulnerability was first found.
        /// </summary>
        [Input("firstFoundDate")]
        public Input<string>? FirstFoundDate { get; set; }

        /// <summary>
        /// Fixed version of the resource.
        /// </summary>
        [Input("fixVersion")]
        public Input<string>? FixVersion { get; set; }

        /// <summary>
        /// Name of the image.
        /// </summary>
        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        /// <summary>
        /// The date when this vulnerability was last found.
        /// </summary>
        [Input("lastFoundDate")]
        public Input<string>? LastFoundDate { get; set; }

        /// <summary>
        /// Thhe date when this vulnerability was modified.
        /// </summary>
        [Input("modificationDate")]
        public Input<string>? ModificationDate { get; set; }

        /// <summary>
        /// The name of the vulnerability.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// CVSS2 score by NVD
        /// </summary>
        [Input("nvdCvss2Score")]
        public Input<double>? NvdCvss2Score { get; set; }

        /// <summary>
        /// CVSS2 vectors by NVD
        /// </summary>
        [Input("nvdCvss2Vectors")]
        public Input<string>? NvdCvss2Vectors { get; set; }

        /// <summary>
        /// CVSS3 score by NVD
        /// </summary>
        [Input("nvdCvss3Score")]
        public Input<double>? NvdCvss3Score { get; set; }

        /// <summary>
        /// CVSS3 severity by NVD
        /// </summary>
        [Input("nvdCvss3Severity")]
        public Input<string>? NvdCvss3Severity { get; set; }

        /// <summary>
        /// CVSS3 vectors by NVD
        /// </summary>
        [Input("nvdCvss3Vectors")]
        public Input<string>? NvdCvss3Vectors { get; set; }

        /// <summary>
        /// Type of the severity identified by NVD.
        /// </summary>
        [Input("nvdSeverity")]
        public Input<string>? NvdSeverity { get; set; }

        /// <summary>
        /// URL of the details of this vulnerability by NVD.
        /// </summary>
        [Input("nvdUrl")]
        public Input<string>? NvdUrl { get; set; }

        /// <summary>
        /// Name of the Operating System.
        /// </summary>
        [Input("os")]
        public Input<string>? Os { get; set; }

        /// <summary>
        /// The version of the OS.
        /// </summary>
        [Input("osVersion")]
        public Input<string>? OsVersion { get; set; }

        /// <summary>
        /// permission on the image
        /// </summary>
        [Input("permission")]
        public Input<string>? Permission { get; set; }

        /// <summary>
        /// The date this vulnerability was published.
        /// </summary>
        [Input("publishDate")]
        public Input<string>? PublishDate { get; set; }

        /// <summary>
        /// Registry of the image.
        /// </summary>
        [Input("registry")]
        public Input<string>? Registry { get; set; }

        /// <summary>
        /// Repository of the image.
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Architecture of the resource.
        /// </summary>
        [Input("resourceArchitecture")]
        public Input<string>? ResourceArchitecture { get; set; }

        /// <summary>
        /// Common Platform Enumeration (CPE) of the resource.
        /// </summary>
        [Input("resourceCpe")]
        public Input<string>? ResourceCpe { get; set; }

        /// <summary>
        /// Code format of the resource (java, apk etc.).
        /// </summary>
        [Input("resourceFormat")]
        public Input<string>? ResourceFormat { get; set; }

        /// <summary>
        /// Hash of the resource.
        /// </summary>
        [Input("resourceHash")]
        public Input<string>? ResourceHash { get; set; }

        [Input("resourceLicenses")]
        private InputList<string>? _resourceLicenses;

        /// <summary>
        /// List of license supported by the resource.
        /// </summary>
        public InputList<string> ResourceLicenses
        {
            get => _resourceLicenses ?? (_resourceLicenses = new InputList<string>());
            set => _resourceLicenses = value;
        }

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// Path of the resource.
        /// </summary>
        [Input("resourcePath")]
        public Input<string>? ResourcePath { get; set; }

        /// <summary>
        /// Type of the resource
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// Version of the resource.
        /// </summary>
        [Input("resourceVersion")]
        public Input<string>? ResourceVersion { get; set; }

        /// <summary>
        /// Classification of the severity.
        /// </summary>
        [Input("severityClassification")]
        public Input<string>? SeverityClassification { get; set; }

        /// <summary>
        /// Solution for the vulnerability.
        /// </summary>
        [Input("solution")]
        public Input<string>? Solution { get; set; }

        [Input("temporalVector")]
        public Input<string>? TemporalVector { get; set; }

        [Input("vPatchAppliedBy")]
        public Input<string>? VPatchAppliedBy { get; set; }

        [Input("vPatchAppliedOn")]
        public Input<string>? VPatchAppliedOn { get; set; }

        [Input("vPatchEnforcedBy")]
        public Input<string>? VPatchEnforcedBy { get; set; }

        [Input("vPatchEnforcedOn")]
        public Input<string>? VPatchEnforcedOn { get; set; }

        [Input("vPatchPolicyEnforce")]
        public Input<bool>? VPatchPolicyEnforce { get; set; }

        [Input("vPatchPolicyName")]
        public Input<string>? VPatchPolicyName { get; set; }

        [Input("vPatchRevertedBy")]
        public Input<string>? VPatchRevertedBy { get; set; }

        [Input("vPatchRevertedOn")]
        public Input<string>? VPatchRevertedOn { get; set; }

        [Input("vPatchStatus")]
        public Input<string>? VPatchStatus { get; set; }

        [Input("vendorCvss2Score")]
        public Input<double>? VendorCvss2Score { get; set; }

        [Input("vendorCvss2Vectors")]
        public Input<string>? VendorCvss2Vectors { get; set; }

        [Input("vendorSeverity")]
        public Input<string>? VendorSeverity { get; set; }

        [Input("vendorStatement")]
        public Input<string>? VendorStatement { get; set; }

        [Input("vendorUrl")]
        public Input<string>? VendorUrl { get; set; }

        public ImageVulnerabilityGetArgs()
        {
        }
        public static new ImageVulnerabilityGetArgs Empty => new ImageVulnerabilityGetArgs();
    }
}
