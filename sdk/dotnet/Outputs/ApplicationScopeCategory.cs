// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec.Outputs
{

    [OutputType]
    public sealed class ApplicationScopeCategory
    {
        /// <summary>
        /// An artifact is an application. It can be an image (for a container, not a CF application); a serverless function; or a Tanzu Application Service (TAS) droplet.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationScopeCategoryArtifact> Artifacts;
        public readonly ImmutableArray<Outputs.ApplicationScopeCategoryEntityScope> EntityScopes;
        /// <summary>
        /// An infrastructure resource is an element of a computing environment on which a workload is orchestrated and run. It can be a host (VM) or a Kubernetes cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationScopeCategoryInfrastructure> Infrastructures;
        /// <summary>
        /// A workload is a running container. It can run in a Kubernetes cluster, on a VM (no orchestrator), or under Tanzu Application Service (TAS).
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationScopeCategoryWorkload> Workloads;

        [OutputConstructor]
        private ApplicationScopeCategory(
            ImmutableArray<Outputs.ApplicationScopeCategoryArtifact> artifacts,

            ImmutableArray<Outputs.ApplicationScopeCategoryEntityScope> entityScopes,

            ImmutableArray<Outputs.ApplicationScopeCategoryInfrastructure> infrastructures,

            ImmutableArray<Outputs.ApplicationScopeCategoryWorkload> workloads)
        {
            Artifacts = artifacts;
            EntityScopes = entityScopes;
            Infrastructures = infrastructures;
            Workloads = workloads;
        }
    }
}
