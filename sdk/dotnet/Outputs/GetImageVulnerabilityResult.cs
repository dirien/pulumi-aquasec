// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec.Outputs
{

    [OutputType]
    public sealed class GetImageVulnerabilityResult
    {
        public readonly string AckAuthor;
        public readonly string AckComment;
        public readonly string AckExpirationConfiguredAt;
        public readonly string AckExpirationConfiguredBy;
        public readonly int AckExpirationDays;
        public readonly string AckScope;
        public readonly string AcknowledgeDate;
        /// <summary>
        /// The ancestor of this package.
        /// </summary>
        public readonly string AncestorPkg;
        /// <summary>
        /// The score generated for the vulnerability by Aqua.
        /// </summary>
        public readonly double AquaScore;
        /// <summary>
        /// Score classification by Aqua.
        /// </summary>
        public readonly string AquaScoreClassification;
        /// <summary>
        /// The score system for the vulnerability by Aqua
        /// </summary>
        public readonly string AquaScoringSystem;
        /// <summary>
        /// The severity generated for the vulnerability by Aqua.
        /// </summary>
        public readonly string AquaSeverity;
        /// <summary>
        /// Classification of the severity defined by Aqua.
        /// </summary>
        public readonly string AquaSeverityClassification;
        /// <summary>
        /// The vectors generated for the vulnerability by Aqua
        /// </summary>
        public readonly string AquaVectors;
        /// <summary>
        /// Number of audit events.
        /// </summary>
        public readonly int AuditEventsCount;
        /// <summary>
        /// Number of blocked events.
        /// </summary>
        public readonly int BlockEventsCount;
        /// <summary>
        /// Classification of the vulnerability.
        /// </summary>
        public readonly string Classification;
        /// <summary>
        /// The description of the vulnerability.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The content digest of the image.
        /// </summary>
        public readonly string Digest;
        /// <summary>
        /// Reference of the exploit.
        /// </summary>
        public readonly string ExploitReference;
        /// <summary>
        /// Type of the exploit.
        /// </summary>
        public readonly string ExploitType;
        /// <summary>
        /// The date when this vulnerability was first found.
        /// </summary>
        public readonly string FirstFoundDate;
        /// <summary>
        /// Fixed version of the resource.
        /// </summary>
        public readonly string FixVersion;
        /// <summary>
        /// Name of the image.
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// The date when this vulnerability was last found.
        /// </summary>
        public readonly string LastFoundDate;
        /// <summary>
        /// Thhe date when this vulnerability was modified.
        /// </summary>
        public readonly string ModificationDate;
        /// <summary>
        /// The name of the vulnerability.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// CVSS2 score by NVD
        /// </summary>
        public readonly double NvdCvss2Score;
        /// <summary>
        /// CVSS2 vectors by NVD
        /// </summary>
        public readonly string NvdCvss2Vectors;
        /// <summary>
        /// CVSS3 score by NVD
        /// </summary>
        public readonly double NvdCvss3Score;
        /// <summary>
        /// CVSS3 severity by NVD
        /// </summary>
        public readonly string NvdCvss3Severity;
        /// <summary>
        /// CVSS3 vectors by NVD
        /// </summary>
        public readonly string NvdCvss3Vectors;
        /// <summary>
        /// Type of the severity identified by NVD.
        /// </summary>
        public readonly string NvdSeverity;
        /// <summary>
        /// URL of the details of this vulnerability by NVD.
        /// </summary>
        public readonly string NvdUrl;
        /// <summary>
        /// Name of the Operating System.
        /// </summary>
        public readonly string Os;
        /// <summary>
        /// The version of the OS.
        /// </summary>
        public readonly string OsVersion;
        /// <summary>
        /// permission on the image
        /// </summary>
        public readonly string Permission;
        /// <summary>
        /// The date this vulnerability was published.
        /// </summary>
        public readonly string PublishDate;
        /// <summary>
        /// Registry of the image.
        /// </summary>
        public readonly string Registry;
        /// <summary>
        /// Repository of the image.
        /// </summary>
        public readonly string Repository;
        /// <summary>
        /// Architecture of the resource.
        /// </summary>
        public readonly string ResourceArchitecture;
        /// <summary>
        /// Common Platform Enumeration (CPE) of the resource.
        /// </summary>
        public readonly string ResourceCpe;
        /// <summary>
        /// Code format of the resource (java, apk etc.).
        /// </summary>
        public readonly string ResourceFormat;
        /// <summary>
        /// Hash of the resource.
        /// </summary>
        public readonly string ResourceHash;
        /// <summary>
        /// List of license supported by the resource.
        /// </summary>
        public readonly ImmutableArray<string> ResourceLicenses;
        /// <summary>
        /// Name of the resource.
        /// </summary>
        public readonly string ResourceName;
        /// <summary>
        /// Path of the resource.
        /// </summary>
        public readonly string ResourcePath;
        /// <summary>
        /// Type of the resource
        /// </summary>
        public readonly string ResourceType;
        /// <summary>
        /// Version of the resource.
        /// </summary>
        public readonly string ResourceVersion;
        /// <summary>
        /// Classification of the severity.
        /// </summary>
        public readonly string SeverityClassification;
        /// <summary>
        /// Solution for the vulnerability.
        /// </summary>
        public readonly string Solution;
        public readonly string TemporalVector;
        public readonly string VPatchAppliedBy;
        public readonly string VPatchAppliedOn;
        public readonly string VPatchEnforcedBy;
        public readonly string VPatchEnforcedOn;
        public readonly bool VPatchPolicyEnforce;
        public readonly string VPatchPolicyName;
        public readonly string VPatchRevertedBy;
        public readonly string VPatchRevertedOn;
        public readonly string VPatchStatus;
        public readonly double VendorCvss2Score;
        public readonly string VendorCvss2Vectors;
        public readonly string VendorSeverity;
        public readonly string VendorStatement;
        public readonly string VendorUrl;

        [OutputConstructor]
        private GetImageVulnerabilityResult(
            string ackAuthor,

            string ackComment,

            string ackExpirationConfiguredAt,

            string ackExpirationConfiguredBy,

            int ackExpirationDays,

            string ackScope,

            string acknowledgeDate,

            string ancestorPkg,

            double aquaScore,

            string aquaScoreClassification,

            string aquaScoringSystem,

            string aquaSeverity,

            string aquaSeverityClassification,

            string aquaVectors,

            int auditEventsCount,

            int blockEventsCount,

            string classification,

            string description,

            string digest,

            string exploitReference,

            string exploitType,

            string firstFoundDate,

            string fixVersion,

            string imageName,

            string lastFoundDate,

            string modificationDate,

            string name,

            double nvdCvss2Score,

            string nvdCvss2Vectors,

            double nvdCvss3Score,

            string nvdCvss3Severity,

            string nvdCvss3Vectors,

            string nvdSeverity,

            string nvdUrl,

            string os,

            string osVersion,

            string permission,

            string publishDate,

            string registry,

            string repository,

            string resourceArchitecture,

            string resourceCpe,

            string resourceFormat,

            string resourceHash,

            ImmutableArray<string> resourceLicenses,

            string resourceName,

            string resourcePath,

            string resourceType,

            string resourceVersion,

            string severityClassification,

            string solution,

            string temporalVector,

            string vPatchAppliedBy,

            string vPatchAppliedOn,

            string vPatchEnforcedBy,

            string vPatchEnforcedOn,

            bool vPatchPolicyEnforce,

            string vPatchPolicyName,

            string vPatchRevertedBy,

            string vPatchRevertedOn,

            string vPatchStatus,

            double vendorCvss2Score,

            string vendorCvss2Vectors,

            string vendorSeverity,

            string vendorStatement,

            string vendorUrl)
        {
            AckAuthor = ackAuthor;
            AckComment = ackComment;
            AckExpirationConfiguredAt = ackExpirationConfiguredAt;
            AckExpirationConfiguredBy = ackExpirationConfiguredBy;
            AckExpirationDays = ackExpirationDays;
            AckScope = ackScope;
            AcknowledgeDate = acknowledgeDate;
            AncestorPkg = ancestorPkg;
            AquaScore = aquaScore;
            AquaScoreClassification = aquaScoreClassification;
            AquaScoringSystem = aquaScoringSystem;
            AquaSeverity = aquaSeverity;
            AquaSeverityClassification = aquaSeverityClassification;
            AquaVectors = aquaVectors;
            AuditEventsCount = auditEventsCount;
            BlockEventsCount = blockEventsCount;
            Classification = classification;
            Description = description;
            Digest = digest;
            ExploitReference = exploitReference;
            ExploitType = exploitType;
            FirstFoundDate = firstFoundDate;
            FixVersion = fixVersion;
            ImageName = imageName;
            LastFoundDate = lastFoundDate;
            ModificationDate = modificationDate;
            Name = name;
            NvdCvss2Score = nvdCvss2Score;
            NvdCvss2Vectors = nvdCvss2Vectors;
            NvdCvss3Score = nvdCvss3Score;
            NvdCvss3Severity = nvdCvss3Severity;
            NvdCvss3Vectors = nvdCvss3Vectors;
            NvdSeverity = nvdSeverity;
            NvdUrl = nvdUrl;
            Os = os;
            OsVersion = osVersion;
            Permission = permission;
            PublishDate = publishDate;
            Registry = registry;
            Repository = repository;
            ResourceArchitecture = resourceArchitecture;
            ResourceCpe = resourceCpe;
            ResourceFormat = resourceFormat;
            ResourceHash = resourceHash;
            ResourceLicenses = resourceLicenses;
            ResourceName = resourceName;
            ResourcePath = resourcePath;
            ResourceType = resourceType;
            ResourceVersion = resourceVersion;
            SeverityClassification = severityClassification;
            Solution = solution;
            TemporalVector = temporalVector;
            VPatchAppliedBy = vPatchAppliedBy;
            VPatchAppliedOn = vPatchAppliedOn;
            VPatchEnforcedBy = vPatchEnforcedBy;
            VPatchEnforcedOn = vPatchEnforcedOn;
            VPatchPolicyEnforce = vPatchPolicyEnforce;
            VPatchPolicyName = vPatchPolicyName;
            VPatchRevertedBy = vPatchRevertedBy;
            VPatchRevertedOn = vPatchRevertedOn;
            VPatchStatus = vPatchStatus;
            VendorCvss2Score = vendorCvss2Score;
            VendorCvss2Vectors = vendorCvss2Vectors;
            VendorSeverity = vendorSeverity;
            VendorStatement = vendorStatement;
            VendorUrl = vendorUrl;
        }
    }
}
