// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Aquasec
{
    /// <summary>
    /// The `aquasec.PermissionsSets` resource manages your Permission Set within Aqua.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aquasec = Pulumiverse.Aquasec;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTerraformPermSet = new Aquasec.PermissionsSets("myTerraformPermSet", new()
    ///     {
    ///         Actions = new[]
    ///         {
    ///             "acl_policies.read",
    ///             "acl_policies.write",
    ///             "image_profiles.read",
    ///             "image_profiles.write",
    ///             "network_policies.read",
    ///             "network_policies.write",
    ///             "runtime_policies.read",
    ///             "runtime_policies.write",
    ///             "response_policies.read",
    ///             "response_policies.write",
    ///             "image_assurance.read",
    ///             "image_assurance.write",
    ///             "dashboard.read",
    ///             "dashboard.write",
    ///             "risk_explorer.read",
    ///             "images.read",
    ///             "images.write",
    ///             "risks.host_images.read",
    ///             "risks.host_images.write",
    ///             "functions.read",
    ///             "functions.write",
    ///             "enforcers.read",
    ///             "enforcers.write",
    ///             "containers.read",
    ///             "services.read",
    ///             "services.write",
    ///             "infrastructure.read",
    ///             "infrastructure.write",
    ///             "risks.vulnerabilities.read",
    ///             "risks.vulnerabilities.write",
    ///             "risks.benchmark.read",
    ///             "risks.benchmark.write",
    ///             "audits.read",
    ///             "secrets.read",
    ///             "secrets.write",
    ///             "settings.read",
    ///             "settings.write",
    ///             "integrations.read",
    ///             "integrations.write",
    ///             "registries_integrations.read",
    ///             "registries_integrations.write",
    ///             "scan.read",
    ///             "gateways.read",
    ///             "gateways.write",
    ///             "consoles.read",
    ///             "web_hook.read",
    ///             "incidents.read",
    ///         },
    ///         Author = "system",
    ///         Description = "Test Permissions Sets created by Terraform",
    ///         IsSuper = false,
    ///         UiAccess = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AquasecResourceType("aquasec:index/permissionsSets:PermissionsSets")]
    public partial class PermissionsSets : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of allowed actions for the Permission Set (not relevant if 'is_super' is true).
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<string>> Actions { get; private set; } = null!;

        /// <summary>
        /// The name of the user who created the Permission Set.
        /// </summary>
        [Output("author")]
        public Output<string?> Author { get; private set; } = null!;

        /// <summary>
        /// Free text description for the Permission Set.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Give the Permission Set full access, meaning all actions are allowed without restriction.
        /// </summary>
        [Output("isSuper")]
        public Output<bool?> IsSuper { get; private set; } = null!;

        /// <summary>
        /// The name of the Permission Set, comprised of alphanumeric characters and '-', '_', ' ', ':', '.', '@', '!', '^'.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether to allow UI access for users with this Permission Set.
        /// </summary>
        [Output("uiAccess")]
        public Output<bool> UiAccess { get; private set; } = null!;

        /// <summary>
        /// The date of the last modification of the Role.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a PermissionsSets resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PermissionsSets(string name, PermissionsSetsArgs args, CustomResourceOptions? options = null)
            : base("aquasec:index/permissionsSets:PermissionsSets", name, args ?? new PermissionsSetsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PermissionsSets(string name, Input<string> id, PermissionsSetsState? state = null, CustomResourceOptions? options = null)
            : base("aquasec:index/permissionsSets:PermissionsSets", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-aquasec",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PermissionsSets resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PermissionsSets Get(string name, Input<string> id, PermissionsSetsState? state = null, CustomResourceOptions? options = null)
        {
            return new PermissionsSets(name, id, state, options);
        }
    }

    public sealed class PermissionsSetsArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<string>? _actions;

        /// <summary>
        /// List of allowed actions for the Permission Set (not relevant if 'is_super' is true).
        /// </summary>
        public InputList<string> Actions
        {
            get => _actions ?? (_actions = new InputList<string>());
            set => _actions = value;
        }

        /// <summary>
        /// The name of the user who created the Permission Set.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Free text description for the Permission Set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Give the Permission Set full access, meaning all actions are allowed without restriction.
        /// </summary>
        [Input("isSuper")]
        public Input<bool>? IsSuper { get; set; }

        /// <summary>
        /// The name of the Permission Set, comprised of alphanumeric characters and '-', '_', ' ', ':', '.', '@', '!', '^'.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether to allow UI access for users with this Permission Set.
        /// </summary>
        [Input("uiAccess", required: true)]
        public Input<bool> UiAccess { get; set; } = null!;

        public PermissionsSetsArgs()
        {
        }
        public static new PermissionsSetsArgs Empty => new PermissionsSetsArgs();
    }

    public sealed class PermissionsSetsState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<string>? _actions;

        /// <summary>
        /// List of allowed actions for the Permission Set (not relevant if 'is_super' is true).
        /// </summary>
        public InputList<string> Actions
        {
            get => _actions ?? (_actions = new InputList<string>());
            set => _actions = value;
        }

        /// <summary>
        /// The name of the user who created the Permission Set.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Free text description for the Permission Set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Give the Permission Set full access, meaning all actions are allowed without restriction.
        /// </summary>
        [Input("isSuper")]
        public Input<bool>? IsSuper { get; set; }

        /// <summary>
        /// The name of the Permission Set, comprised of alphanumeric characters and '-', '_', ' ', ':', '.', '@', '!', '^'.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether to allow UI access for users with this Permission Set.
        /// </summary>
        [Input("uiAccess")]
        public Input<bool>? UiAccess { get; set; }

        /// <summary>
        /// The date of the last modification of the Role.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public PermissionsSetsState()
        {
        }
        public static new PermissionsSetsState Empty => new PermissionsSetsState();
    }
}
