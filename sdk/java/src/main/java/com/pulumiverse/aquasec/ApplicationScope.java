// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.aquasec.ApplicationScopeArgs;
import com.pulumiverse.aquasec.Utilities;
import com.pulumiverse.aquasec.inputs.ApplicationScopeState;
import com.pulumiverse.aquasec.outputs.ApplicationScopeCategory;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aquasec.ApplicationScope;
 * import com.pulumi.aquasec.ApplicationScopeArgs;
 * import com.pulumi.aquasec.inputs.ApplicationScopeCategoryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var terraformiap = new ApplicationScope(&#34;terraformiap&#34;, ApplicationScopeArgs.builder()        
 *             .categories(ApplicationScopeCategoryArgs.builder()
 *                 .artifacts(ApplicationScopeCategoryArtifactArgs.builder()
 *                     .image(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                     .build())
 *                 .infrastructures(ApplicationScopeCategoryInfrastructureArgs.builder()
 *                     .kubernetes(ApplicationScopeCategoryInfrastructureKuberneteArgs.builder()
 *                         .expression(&#34;v1&#34;)
 *                         .variables(ApplicationScopeCategoryInfrastructureKuberneteVariableArgs.builder()
 *                             .attribute(&#34;kubernetes.cluster&#34;)
 *                             .value(&#34;aqua&#34;)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .workloads(ApplicationScopeCategoryWorkloadArgs.builder()
 *                     .kubernetes(ApplicationScopeCategoryWorkloadKuberneteArgs.builder()
 *                         .expression(&#34;v1 &amp;&amp; v2&#34;)
 *                         .variables(                        
 *                             ApplicationScopeCategoryWorkloadKuberneteVariableArgs.builder()
 *                                 .attribute(&#34;kubernetes.cluster&#34;)
 *                                 .value(&#34;aqua&#34;)
 *                                 .build(),
 *                             ApplicationScopeCategoryWorkloadKuberneteVariableArgs.builder()
 *                                 .attribute(&#34;kubernetes.namespace&#34;)
 *                                 .value(&#34;aqua&#34;)
 *                                 .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .description(&#34;test123&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="aquasec:index/applicationScope:ApplicationScope")
public class ApplicationScope extends com.pulumi.resources.CustomResource {
    /**
     * Username of the account that created the service.
     * 
     */
    @Export(name="author", refs={String.class}, tree="[0]")
    private Output<String> author;

    /**
     * @return Username of the account that created the service.
     * 
     */
    public Output<String> author() {
        return this.author;
    }
    /**
     * Artifacts (of applications) / Workloads (containers) / Infrastructure (elements).
     * 
     */
    @Export(name="categories", refs={List.class,ApplicationScopeCategory.class}, tree="[0,1]")
    private Output<List<ApplicationScopeCategory>> categories;

    /**
     * @return Artifacts (of applications) / Workloads (containers) / Infrastructure (elements).
     * 
     */
    public Output<List<ApplicationScopeCategory>> categories() {
        return this.categories;
    }
    /**
     * Description of the application scope.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the application scope.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Name of an application scope.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of an application scope.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of an application scope.
     * 
     */
    @Export(name="ownerEmail", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ownerEmail;

    /**
     * @return Name of an application scope.
     * 
     */
    public Output<Optional<String>> ownerEmail() {
        return Codegen.optional(this.ownerEmail);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationScope(String name) {
        this(name, ApplicationScopeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationScope(String name, @Nullable ApplicationScopeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationScope(String name, @Nullable ApplicationScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/applicationScope:ApplicationScope", name, args == null ? ApplicationScopeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApplicationScope(String name, Output<String> id, @Nullable ApplicationScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/applicationScope:ApplicationScope", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationScope get(String name, Output<String> id, @Nullable ApplicationScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationScope(name, id, state, options);
    }
}
