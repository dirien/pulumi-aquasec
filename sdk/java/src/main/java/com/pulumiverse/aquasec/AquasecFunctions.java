// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import com.pulumiverse.aquasec.Utilities;
import com.pulumiverse.aquasec.inputs.GetApplicationScopeArgs;
import com.pulumiverse.aquasec.inputs.GetApplicationScopePlainArgs;
import com.pulumiverse.aquasec.inputs.GetContainerRuntimePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetContainerRuntimePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetEnforcerGroupsArgs;
import com.pulumiverse.aquasec.inputs.GetEnforcerGroupsPlainArgs;
import com.pulumiverse.aquasec.inputs.GetFirewallPolicyArgs;
import com.pulumiverse.aquasec.inputs.GetFirewallPolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetFunctionAssurancePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetFunctionAssurancePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetFunctionRuntimePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetFunctionRuntimePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetHostAssurancePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetHostAssurancePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetHostRuntimePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetHostRuntimePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetImageArgs;
import com.pulumiverse.aquasec.inputs.GetImageAssurancePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetImageAssurancePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetImagePlainArgs;
import com.pulumiverse.aquasec.inputs.GetIntegrationRegistryArgs;
import com.pulumiverse.aquasec.inputs.GetIntegrationRegistryPlainArgs;
import com.pulumiverse.aquasec.inputs.GetKubernetesAssurancePolicyArgs;
import com.pulumiverse.aquasec.inputs.GetKubernetesAssurancePolicyPlainArgs;
import com.pulumiverse.aquasec.inputs.GetServiceArgs;
import com.pulumiverse.aquasec.inputs.GetServicePlainArgs;
import com.pulumiverse.aquasec.outputs.GetApplicationScopeResult;
import com.pulumiverse.aquasec.outputs.GetContainerRuntimePolicyResult;
import com.pulumiverse.aquasec.outputs.GetEnforcerGroupsResult;
import com.pulumiverse.aquasec.outputs.GetFirewallPolicyResult;
import com.pulumiverse.aquasec.outputs.GetFunctionAssurancePolicyResult;
import com.pulumiverse.aquasec.outputs.GetFunctionRuntimePolicyResult;
import com.pulumiverse.aquasec.outputs.GetGatewaysResult;
import com.pulumiverse.aquasec.outputs.GetGroupsResult;
import com.pulumiverse.aquasec.outputs.GetHostAssurancePolicyResult;
import com.pulumiverse.aquasec.outputs.GetHostRuntimePolicyResult;
import com.pulumiverse.aquasec.outputs.GetImageAssurancePolicyResult;
import com.pulumiverse.aquasec.outputs.GetImageResult;
import com.pulumiverse.aquasec.outputs.GetIntegrationRegistryResult;
import com.pulumiverse.aquasec.outputs.GetIntegrationStateResult;
import com.pulumiverse.aquasec.outputs.GetKubernetesAssurancePolicyResult;
import com.pulumiverse.aquasec.outputs.GetPermissionsSetsResult;
import com.pulumiverse.aquasec.outputs.GetRolesMappingResult;
import com.pulumiverse.aquasec.outputs.GetRolesMappingSaasResult;
import com.pulumiverse.aquasec.outputs.GetRolesResult;
import com.pulumiverse.aquasec.outputs.GetServiceResult;
import com.pulumiverse.aquasec.outputs.GetUsersResult;
import com.pulumiverse.aquasec.outputs.GetUsersSaasResult;
import java.util.concurrent.CompletableFuture;

public final class AquasecFunctions {
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetApplicationScopeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AquasecFunctions.getApplicationScope(GetApplicationScopeArgs.builder()
     *             .name(&#34;Global&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;scopes&#34;, default_);
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetApplicationScopeResult> getApplicationScope(GetApplicationScopeArgs args) {
        return getApplicationScope(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetApplicationScopeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AquasecFunctions.getApplicationScope(GetApplicationScopeArgs.builder()
     *             .name(&#34;Global&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;scopes&#34;, default_);
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetApplicationScopeResult> getApplicationScopePlain(GetApplicationScopePlainArgs args) {
        return getApplicationScopePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetApplicationScopeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AquasecFunctions.getApplicationScope(GetApplicationScopeArgs.builder()
     *             .name(&#34;Global&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;scopes&#34;, default_);
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetApplicationScopeResult> getApplicationScope(GetApplicationScopeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getApplicationScope:getApplicationScope", TypeShape.of(GetApplicationScopeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetApplicationScopeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = AquasecFunctions.getApplicationScope(GetApplicationScopeArgs.builder()
     *             .name(&#34;Global&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;scopes&#34;, default_);
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetApplicationScopeResult> getApplicationScopePlain(GetApplicationScopePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getApplicationScope:getApplicationScope", TypeShape.of(GetApplicationScopeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetContainerRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var containerRuntimePolicy = AquasecFunctions.getContainerRuntimePolicy(GetContainerRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;containerRuntimePolicyDetails&#34;, containerRuntimePolicy.applyValue(getContainerRuntimePolicyResult -&gt; getContainerRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerRuntimePolicyResult> getContainerRuntimePolicy(GetContainerRuntimePolicyArgs args) {
        return getContainerRuntimePolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetContainerRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var containerRuntimePolicy = AquasecFunctions.getContainerRuntimePolicy(GetContainerRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;containerRuntimePolicyDetails&#34;, containerRuntimePolicy.applyValue(getContainerRuntimePolicyResult -&gt; getContainerRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerRuntimePolicyResult> getContainerRuntimePolicyPlain(GetContainerRuntimePolicyPlainArgs args) {
        return getContainerRuntimePolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetContainerRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var containerRuntimePolicy = AquasecFunctions.getContainerRuntimePolicy(GetContainerRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;containerRuntimePolicyDetails&#34;, containerRuntimePolicy.applyValue(getContainerRuntimePolicyResult -&gt; getContainerRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetContainerRuntimePolicyResult> getContainerRuntimePolicy(GetContainerRuntimePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getContainerRuntimePolicy:getContainerRuntimePolicy", TypeShape.of(GetContainerRuntimePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetContainerRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var containerRuntimePolicy = AquasecFunctions.getContainerRuntimePolicy(GetContainerRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;containerRuntimePolicyDetails&#34;, containerRuntimePolicy.applyValue(getContainerRuntimePolicyResult -&gt; getContainerRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetContainerRuntimePolicyResult> getContainerRuntimePolicyPlain(GetContainerRuntimePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getContainerRuntimePolicy:getContainerRuntimePolicy", TypeShape.of(GetContainerRuntimePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetEnforcerGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groups = AquasecFunctions.getEnforcerGroups(GetEnforcerGroupsArgs.builder()
     *             .groupId(&#34;IacGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;groupDetails&#34;, groups.applyValue(getEnforcerGroupsResult -&gt; getEnforcerGroupsResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnforcerGroupsResult> getEnforcerGroups(GetEnforcerGroupsArgs args) {
        return getEnforcerGroups(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetEnforcerGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groups = AquasecFunctions.getEnforcerGroups(GetEnforcerGroupsArgs.builder()
     *             .groupId(&#34;IacGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;groupDetails&#34;, groups.applyValue(getEnforcerGroupsResult -&gt; getEnforcerGroupsResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnforcerGroupsResult> getEnforcerGroupsPlain(GetEnforcerGroupsPlainArgs args) {
        return getEnforcerGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetEnforcerGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groups = AquasecFunctions.getEnforcerGroups(GetEnforcerGroupsArgs.builder()
     *             .groupId(&#34;IacGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;groupDetails&#34;, groups.applyValue(getEnforcerGroupsResult -&gt; getEnforcerGroupsResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnforcerGroupsResult> getEnforcerGroups(GetEnforcerGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getEnforcerGroups:getEnforcerGroups", TypeShape.of(GetEnforcerGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetEnforcerGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var groups = AquasecFunctions.getEnforcerGroups(GetEnforcerGroupsArgs.builder()
     *             .groupId(&#34;IacGroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;groupDetails&#34;, groups.applyValue(getEnforcerGroupsResult -&gt; getEnforcerGroupsResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnforcerGroupsResult> getEnforcerGroupsPlain(GetEnforcerGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getEnforcerGroups:getEnforcerGroups", TypeShape.of(GetEnforcerGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetFirewallPolicyResult> getFirewallPolicy(GetFirewallPolicyArgs args) {
        return getFirewallPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFirewallPolicyResult> getFirewallPolicyPlain(GetFirewallPolicyPlainArgs args) {
        return getFirewallPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetFirewallPolicyResult> getFirewallPolicy(GetFirewallPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getFirewallPolicy:getFirewallPolicy", TypeShape.of(GetFirewallPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetFirewallPolicyResult> getFirewallPolicyPlain(GetFirewallPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getFirewallPolicy:getFirewallPolicy", TypeShape.of(GetFirewallPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetFunctionAssurancePolicyResult> getFunctionAssurancePolicy(GetFunctionAssurancePolicyArgs args) {
        return getFunctionAssurancePolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFunctionAssurancePolicyResult> getFunctionAssurancePolicyPlain(GetFunctionAssurancePolicyPlainArgs args) {
        return getFunctionAssurancePolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetFunctionAssurancePolicyResult> getFunctionAssurancePolicy(GetFunctionAssurancePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getFunctionAssurancePolicy:getFunctionAssurancePolicy", TypeShape.of(GetFunctionAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetFunctionAssurancePolicyResult> getFunctionAssurancePolicyPlain(GetFunctionAssurancePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getFunctionAssurancePolicy:getFunctionAssurancePolicy", TypeShape.of(GetFunctionAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetFunctionRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionRuntimePolicy = AquasecFunctions.getFunctionRuntimePolicy(GetFunctionRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;functionRuntimePolicyDetails&#34;, functionRuntimePolicy.applyValue(getFunctionRuntimePolicyResult -&gt; getFunctionRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionRuntimePolicyResult> getFunctionRuntimePolicy(GetFunctionRuntimePolicyArgs args) {
        return getFunctionRuntimePolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetFunctionRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionRuntimePolicy = AquasecFunctions.getFunctionRuntimePolicy(GetFunctionRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;functionRuntimePolicyDetails&#34;, functionRuntimePolicy.applyValue(getFunctionRuntimePolicyResult -&gt; getFunctionRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionRuntimePolicyResult> getFunctionRuntimePolicyPlain(GetFunctionRuntimePolicyPlainArgs args) {
        return getFunctionRuntimePolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetFunctionRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionRuntimePolicy = AquasecFunctions.getFunctionRuntimePolicy(GetFunctionRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;functionRuntimePolicyDetails&#34;, functionRuntimePolicy.applyValue(getFunctionRuntimePolicyResult -&gt; getFunctionRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionRuntimePolicyResult> getFunctionRuntimePolicy(GetFunctionRuntimePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getFunctionRuntimePolicy:getFunctionRuntimePolicy", TypeShape.of(GetFunctionRuntimePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetFunctionRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var functionRuntimePolicy = AquasecFunctions.getFunctionRuntimePolicy(GetFunctionRuntimePolicyArgs.builder()
     *             .name(&#34;FunctionRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;functionRuntimePolicyDetails&#34;, functionRuntimePolicy.applyValue(getFunctionRuntimePolicyResult -&gt; getFunctionRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionRuntimePolicyResult> getFunctionRuntimePolicyPlain(GetFunctionRuntimePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getFunctionRuntimePolicy:getFunctionRuntimePolicy", TypeShape.of(GetFunctionRuntimePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
     * 
     */
    public static Output<GetGatewaysResult> getGateways() {
        return getGateways(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
     * 
     */
    public static CompletableFuture<GetGatewaysResult> getGatewaysPlain() {
        return getGatewaysPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
     * 
     */
    public static Output<GetGatewaysResult> getGateways(InvokeArgs args) {
        return getGateways(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
     * 
     */
    public static CompletableFuture<GetGatewaysResult> getGatewaysPlain(InvokeArgs args) {
        return getGatewaysPlain(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
     * 
     */
    public static Output<GetGatewaysResult> getGateways(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getGateways:getGateways", TypeShape.of(GetGatewaysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getGateways` provides a method to query all gateways within the Aqua
     * 
     */
    public static CompletableFuture<GetGatewaysResult> getGatewaysPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getGateways:getGateways", TypeShape.of(GetGatewaysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetGroupsResult> getGroups() {
        return getGroups(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain() {
        return getGroupsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetGroupsResult> getGroups(InvokeArgs args) {
        return getGroups(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(InvokeArgs args) {
        return getGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetGroupsResult> getGroups(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getGroups` provides a method to query all groups within the Aqua CSPMgroup database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetHostAssurancePolicyResult> getHostAssurancePolicy(GetHostAssurancePolicyArgs args) {
        return getHostAssurancePolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetHostAssurancePolicyResult> getHostAssurancePolicyPlain(GetHostAssurancePolicyPlainArgs args) {
        return getHostAssurancePolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetHostAssurancePolicyResult> getHostAssurancePolicy(GetHostAssurancePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getHostAssurancePolicy:getHostAssurancePolicy", TypeShape.of(GetHostAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetHostAssurancePolicyResult> getHostAssurancePolicyPlain(GetHostAssurancePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getHostAssurancePolicy:getHostAssurancePolicy", TypeShape.of(GetHostAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetHostRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var hostRuntimePolicy = AquasecFunctions.getHostRuntimePolicy(GetHostRuntimePolicyArgs.builder()
     *             .name(&#34;hostRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;hostRuntimePolicyDetails&#34;, hostRuntimePolicy.applyValue(getHostRuntimePolicyResult -&gt; getHostRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHostRuntimePolicyResult> getHostRuntimePolicy(GetHostRuntimePolicyArgs args) {
        return getHostRuntimePolicy(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetHostRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var hostRuntimePolicy = AquasecFunctions.getHostRuntimePolicy(GetHostRuntimePolicyArgs.builder()
     *             .name(&#34;hostRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;hostRuntimePolicyDetails&#34;, hostRuntimePolicy.applyValue(getHostRuntimePolicyResult -&gt; getHostRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHostRuntimePolicyResult> getHostRuntimePolicyPlain(GetHostRuntimePolicyPlainArgs args) {
        return getHostRuntimePolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetHostRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var hostRuntimePolicy = AquasecFunctions.getHostRuntimePolicy(GetHostRuntimePolicyArgs.builder()
     *             .name(&#34;hostRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;hostRuntimePolicyDetails&#34;, hostRuntimePolicy.applyValue(getHostRuntimePolicyResult -&gt; getHostRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetHostRuntimePolicyResult> getHostRuntimePolicy(GetHostRuntimePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getHostRuntimePolicy:getHostRuntimePolicy", TypeShape.of(GetHostRuntimePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aquasec.AquasecFunctions;
     * import com.pulumi.aquasec.inputs.GetHostRuntimePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var hostRuntimePolicy = AquasecFunctions.getHostRuntimePolicy(GetHostRuntimePolicyArgs.builder()
     *             .name(&#34;hostRuntimePolicyName&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;hostRuntimePolicyDetails&#34;, hostRuntimePolicy.applyValue(getHostRuntimePolicyResult -&gt; getHostRuntimePolicyResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetHostRuntimePolicyResult> getHostRuntimePolicyPlain(GetHostRuntimePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getHostRuntimePolicy:getHostRuntimePolicy", TypeShape.of(GetHostRuntimePolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetImageResult> getImage(GetImageArgs args) {
        return getImage(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args) {
        return getImagePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetImageResult> getImage(GetImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetImageAssurancePolicyResult> getImageAssurancePolicy(GetImageAssurancePolicyArgs args) {
        return getImageAssurancePolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetImageAssurancePolicyResult> getImageAssurancePolicyPlain(GetImageAssurancePolicyPlainArgs args) {
        return getImageAssurancePolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetImageAssurancePolicyResult> getImageAssurancePolicy(GetImageAssurancePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getImageAssurancePolicy:getImageAssurancePolicy", TypeShape.of(GetImageAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetImageAssurancePolicyResult> getImageAssurancePolicyPlain(GetImageAssurancePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getImageAssurancePolicy:getImageAssurancePolicy", TypeShape.of(GetImageAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetIntegrationRegistryResult> getIntegrationRegistry(GetIntegrationRegistryArgs args) {
        return getIntegrationRegistry(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetIntegrationRegistryResult> getIntegrationRegistryPlain(GetIntegrationRegistryPlainArgs args) {
        return getIntegrationRegistryPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetIntegrationRegistryResult> getIntegrationRegistry(GetIntegrationRegistryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getIntegrationRegistry:getIntegrationRegistry", TypeShape.of(GetIntegrationRegistryResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetIntegrationRegistryResult> getIntegrationRegistryPlain(GetIntegrationRegistryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getIntegrationRegistry:getIntegrationRegistry", TypeShape.of(GetIntegrationRegistryResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetIntegrationStateResult> getIntegrationState() {
        return getIntegrationState(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetIntegrationStateResult> getIntegrationStatePlain() {
        return getIntegrationStatePlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetIntegrationStateResult> getIntegrationState(InvokeArgs args) {
        return getIntegrationState(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetIntegrationStateResult> getIntegrationStatePlain(InvokeArgs args) {
        return getIntegrationStatePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetIntegrationStateResult> getIntegrationState(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getIntegrationState:getIntegrationState", TypeShape.of(GetIntegrationStateResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetIntegrationStateResult> getIntegrationStatePlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getIntegrationState:getIntegrationState", TypeShape.of(GetIntegrationStateResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetKubernetesAssurancePolicyResult> getKubernetesAssurancePolicy(GetKubernetesAssurancePolicyArgs args) {
        return getKubernetesAssurancePolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetKubernetesAssurancePolicyResult> getKubernetesAssurancePolicyPlain(GetKubernetesAssurancePolicyPlainArgs args) {
        return getKubernetesAssurancePolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetKubernetesAssurancePolicyResult> getKubernetesAssurancePolicy(GetKubernetesAssurancePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getKubernetesAssurancePolicy:getKubernetesAssurancePolicy", TypeShape.of(GetKubernetesAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetKubernetesAssurancePolicyResult> getKubernetesAssurancePolicyPlain(GetKubernetesAssurancePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getKubernetesAssurancePolicy:getKubernetesAssurancePolicy", TypeShape.of(GetKubernetesAssurancePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetPermissionsSetsResult> getPermissionsSets() {
        return getPermissionsSets(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetPermissionsSetsResult> getPermissionsSetsPlain() {
        return getPermissionsSetsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetPermissionsSetsResult> getPermissionsSets(InvokeArgs args) {
        return getPermissionsSets(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetPermissionsSetsResult> getPermissionsSetsPlain(InvokeArgs args) {
        return getPermissionsSetsPlain(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetPermissionsSetsResult> getPermissionsSets(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getPermissionsSets:getPermissionsSets", TypeShape.of(GetPermissionsSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.PermissionsSets` provides a method to query all permissions within the Aqua CSPMThe fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetPermissionsSetsResult> getPermissionsSetsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getPermissionsSets:getPermissionsSets", TypeShape.of(GetPermissionsSetsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetRolesResult> getRoles(InvokeArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(InvokeArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetRolesResult> getRoles(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getRoles` provides a method to query all roles within the Aqua account managementrole database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRolesMappingResult> getRolesMapping() {
        return getRolesMapping(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRolesMappingResult> getRolesMappingPlain() {
        return getRolesMappingPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetRolesMappingResult> getRolesMapping(InvokeArgs args) {
        return getRolesMapping(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRolesMappingResult> getRolesMappingPlain(InvokeArgs args) {
        return getRolesMappingPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRolesMappingResult> getRolesMapping(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getRolesMapping:getRolesMapping", TypeShape.of(GetRolesMappingResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRolesMappingResult> getRolesMappingPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getRolesMapping:getRolesMapping", TypeShape.of(GetRolesMappingResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRolesMappingSaasResult> getRolesMappingSaas() {
        return getRolesMappingSaas(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRolesMappingSaasResult> getRolesMappingSaasPlain() {
        return getRolesMappingSaasPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetRolesMappingSaasResult> getRolesMappingSaas(InvokeArgs args) {
        return getRolesMappingSaas(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRolesMappingSaasResult> getRolesMappingSaasPlain(InvokeArgs args) {
        return getRolesMappingSaasPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRolesMappingSaasResult> getRolesMappingSaas(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getRolesMappingSaas:getRolesMappingSaas", TypeShape.of(GetRolesMappingSaasResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRolesMappingSaasResult> getRolesMappingSaasPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getRolesMappingSaas:getRolesMappingSaas", TypeShape.of(GetRolesMappingSaasResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetUsersResult> getUsers(InvokeArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(InvokeArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetUsersResult> getUsers(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getUsers` provides a method to query all users within the Aqua users database. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetUsersSaasResult> getUsersSaas() {
        return getUsersSaas(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetUsersSaasResult> getUsersSaasPlain() {
        return getUsersSaasPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetUsersSaasResult> getUsersSaas(InvokeArgs args) {
        return getUsersSaas(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetUsersSaasResult> getUsersSaasPlain(InvokeArgs args) {
        return getUsersSaasPlain(args, InvokeOptions.Empty);
    }
    /**
     * The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static Output<GetUsersSaasResult> getUsersSaas(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("aquasec:index/getUsersSaas:getUsersSaas", TypeShape.of(GetUsersSaasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * The data source `aquasec.getUsersSaas` provides a method to query all saas users within the Aqua users management. The fields returned from this query are detailed in the Schema section below.
     * 
     */
    public static CompletableFuture<GetUsersSaasResult> getUsersSaasPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("aquasec:index/getUsersSaas:getUsersSaas", TypeShape.of(GetUsersSaasResult.class), args, Utilities.withVersion(options));
    }
}
