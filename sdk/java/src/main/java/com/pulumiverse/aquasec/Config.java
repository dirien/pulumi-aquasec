// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("aquasec");
/**
 * This is the base URL of your Aqua instance. Can alternatively be sourced from the `AQUA_URL` environment variable.
 * 
 */
    public Optional<String> aquaUrl() {
        return Codegen.stringProp("aquaUrl").config(config).get();
    }
/**
 * This is the file path for server CA certificates if they are not available on the host OS. Can alternatively be sourced
 * from the `AQUA_CA_CERT_PATH` environment variable.
 * 
 */
    public Optional<String> caCertificatePath() {
        return Codegen.stringProp("caCertificatePath").config(config).get();
    }
/**
 * This is the file path for Aqua provider configuration. The default configuration path is `~/.aqua/tf.config`. Can
 * alternatively be sourced from the `AQUA_CONFIG` environment variable.
 * 
 */
    public Optional<String> configPath() {
        return Codegen.stringProp("configPath").config(config).get();
    }
/**
 * This is the password that should be used to make the connection. Can alternatively be sourced from the `AQUA_PASSWORD`
 * environment variable.
 * 
 */
    public Optional<String> password() {
        return Codegen.stringProp("password").config(config).get();
    }
/**
 * This is the user id that should be used to make the connection. Can alternatively be sourced from the `AQUA_USER`
 * environment variable.
 * 
 */
    public Optional<String> username() {
        return Codegen.stringProp("username").config(config).get();
    }
/**
 * If true, server tls certificates will be verified by the client before making a connection. Defaults to true. Can
 * alternatively be sourced from the `AQUA_TLS_VERIFY` environment variable.
 * 
 */
    public Optional<Boolean> verifyTls() {
        return Codegen.booleanProp("verifyTls").config(config).get();
    }
}
