// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.aquasec.inputs.FirewallPolicyInboundNetworkArgs;
import com.pulumiverse.aquasec.inputs.FirewallPolicyOutboundNetworkArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyArgs Empty = new FirewallPolicyArgs();

    /**
     * Indicates whether policy includes blocking incoming &#39;ping&#39; requests.
     * 
     */
    @Import(name="blockIcmpPing")
    private @Nullable Output<Boolean> blockIcmpPing;

    /**
     * @return Indicates whether policy includes blocking incoming &#39;ping&#39; requests.
     * 
     */
    public Optional<Output<Boolean>> blockIcmpPing() {
        return Optional.ofNullable(this.blockIcmpPing);
    }

    /**
     * Indicates whether policy includes blocking metadata services of the cloud.
     * 
     */
    @Import(name="blockMetadataService")
    private @Nullable Output<Boolean> blockMetadataService;

    /**
     * @return Indicates whether policy includes blocking metadata services of the cloud.
     * 
     */
    public Optional<Output<Boolean>> blockMetadataService() {
        return Optional.ofNullable(this.blockMetadataService);
    }

    /**
     * Description of the Firewall Policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the Firewall Policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Information on network addresses that are allowed to pass in data or requests.
     * 
     */
    @Import(name="inboundNetworks")
    private @Nullable Output<List<FirewallPolicyInboundNetworkArgs>> inboundNetworks;

    /**
     * @return Information on network addresses that are allowed to pass in data or requests.
     * 
     */
    public Optional<Output<List<FirewallPolicyInboundNetworkArgs>>> inboundNetworks() {
        return Optional.ofNullable(this.inboundNetworks);
    }

    /**
     * Name of the policy, no longer than 128 characters and no slash characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the policy, no longer than 128 characters and no slash characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Information on network addresses that are allowed to receive data or requests.
     * 
     */
    @Import(name="outboundNetworks")
    private @Nullable Output<List<FirewallPolicyOutboundNetworkArgs>> outboundNetworks;

    /**
     * @return Information on network addresses that are allowed to receive data or requests.
     * 
     */
    public Optional<Output<List<FirewallPolicyOutboundNetworkArgs>>> outboundNetworks() {
        return Optional.ofNullable(this.outboundNetworks);
    }

    /**
     * Indicates the class of protection defined by the firewall.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Indicates the class of protection defined by the firewall.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Aqua version functionality supported
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Aqua version functionality supported
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private FirewallPolicyArgs() {}

    private FirewallPolicyArgs(FirewallPolicyArgs $) {
        this.blockIcmpPing = $.blockIcmpPing;
        this.blockMetadataService = $.blockMetadataService;
        this.description = $.description;
        this.inboundNetworks = $.inboundNetworks;
        this.name = $.name;
        this.outboundNetworks = $.outboundNetworks;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyArgs $;

        public Builder() {
            $ = new FirewallPolicyArgs();
        }

        public Builder(FirewallPolicyArgs defaults) {
            $ = new FirewallPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blockIcmpPing Indicates whether policy includes blocking incoming &#39;ping&#39; requests.
         * 
         * @return builder
         * 
         */
        public Builder blockIcmpPing(@Nullable Output<Boolean> blockIcmpPing) {
            $.blockIcmpPing = blockIcmpPing;
            return this;
        }

        /**
         * @param blockIcmpPing Indicates whether policy includes blocking incoming &#39;ping&#39; requests.
         * 
         * @return builder
         * 
         */
        public Builder blockIcmpPing(Boolean blockIcmpPing) {
            return blockIcmpPing(Output.of(blockIcmpPing));
        }

        /**
         * @param blockMetadataService Indicates whether policy includes blocking metadata services of the cloud.
         * 
         * @return builder
         * 
         */
        public Builder blockMetadataService(@Nullable Output<Boolean> blockMetadataService) {
            $.blockMetadataService = blockMetadataService;
            return this;
        }

        /**
         * @param blockMetadataService Indicates whether policy includes blocking metadata services of the cloud.
         * 
         * @return builder
         * 
         */
        public Builder blockMetadataService(Boolean blockMetadataService) {
            return blockMetadataService(Output.of(blockMetadataService));
        }

        /**
         * @param description Description of the Firewall Policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the Firewall Policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param inboundNetworks Information on network addresses that are allowed to pass in data or requests.
         * 
         * @return builder
         * 
         */
        public Builder inboundNetworks(@Nullable Output<List<FirewallPolicyInboundNetworkArgs>> inboundNetworks) {
            $.inboundNetworks = inboundNetworks;
            return this;
        }

        /**
         * @param inboundNetworks Information on network addresses that are allowed to pass in data or requests.
         * 
         * @return builder
         * 
         */
        public Builder inboundNetworks(List<FirewallPolicyInboundNetworkArgs> inboundNetworks) {
            return inboundNetworks(Output.of(inboundNetworks));
        }

        /**
         * @param inboundNetworks Information on network addresses that are allowed to pass in data or requests.
         * 
         * @return builder
         * 
         */
        public Builder inboundNetworks(FirewallPolicyInboundNetworkArgs... inboundNetworks) {
            return inboundNetworks(List.of(inboundNetworks));
        }

        /**
         * @param name Name of the policy, no longer than 128 characters and no slash characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the policy, no longer than 128 characters and no slash characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outboundNetworks Information on network addresses that are allowed to receive data or requests.
         * 
         * @return builder
         * 
         */
        public Builder outboundNetworks(@Nullable Output<List<FirewallPolicyOutboundNetworkArgs>> outboundNetworks) {
            $.outboundNetworks = outboundNetworks;
            return this;
        }

        /**
         * @param outboundNetworks Information on network addresses that are allowed to receive data or requests.
         * 
         * @return builder
         * 
         */
        public Builder outboundNetworks(List<FirewallPolicyOutboundNetworkArgs> outboundNetworks) {
            return outboundNetworks(Output.of(outboundNetworks));
        }

        /**
         * @param outboundNetworks Information on network addresses that are allowed to receive data or requests.
         * 
         * @return builder
         * 
         */
        public Builder outboundNetworks(FirewallPolicyOutboundNetworkArgs... outboundNetworks) {
            return outboundNetworks(List.of(outboundNetworks));
        }

        /**
         * @param type Indicates the class of protection defined by the firewall.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Indicates the class of protection defined by the firewall.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param version Aqua version functionality supported
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Aqua version functionality supported
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public FirewallPolicyArgs build() {
            return $;
        }
    }

}
