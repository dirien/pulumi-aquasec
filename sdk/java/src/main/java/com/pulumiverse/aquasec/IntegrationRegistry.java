// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.aquasec.IntegrationRegistryArgs;
import com.pulumiverse.aquasec.Utilities;
import com.pulumiverse.aquasec.inputs.IntegrationRegistryState;
import com.pulumiverse.aquasec.outputs.IntegrationRegistryOption;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aquasec.IntegrationRegistry;
 * import com.pulumi.aquasec.IntegrationRegistryArgs;
 * import com.pulumi.aquasec.inputs.IntegrationRegistryOptionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var integrationRegistry = new IntegrationRegistry(&#34;integrationRegistry&#34;, IntegrationRegistryArgs.builder()        
 *             .type(&#34;AWS&#34;)
 *             .advancedSettingsCleanup(false)
 *             .alwaysPullPatterns()
 *             .author(&#34;aqua@aquasec.com&#34;)
 *             .autoCleanup(false)
 *             .autoPull(true)
 *             .autoPullInterval(1)
 *             .autoPullLatestXffEnabled(false)
 *             .autoPullMax(100)
 *             .autoPullRescan(false)
 *             .autoPullTime(&#34;08:45&#34;)
 *             .description(&#34;Automatically discovered registry&#34;)
 *             .detectedType(4)
 *             .imageCreationDateCondition(&#34;image_count&#34;)
 *             .options(            
 *                 IntegrationRegistryOptionArgs.builder()
 *                     .option(&#34;ARNRole&#34;)
 *                     .value(&#34;arn:aws:iam::000000000000:role/aqua-AAAAABBBBCCCDDD-EEEEFFFFGGGG&#34;)
 *                     .build(),
 *                 IntegrationRegistryOptionArgs.builder()
 *                     .option(&#34;TestImagePull&#34;)
 *                     .build(),
 *                 IntegrationRegistryOptionArgs.builder()
 *                     .option(&#34;sts:ExternalId&#34;)
 *                     .value(&#34;00000e2a-5353-4ddd-bbbb-ccc&#34;)
 *                     .build())
 *             .permission(&#34;&#34;)
 *             .prefixes(&#34;111111111111.dkr.ecr.us-east-1.amazonaws.com&#34;)
 *             .pullImageAge(&#34;0D&#34;)
 *             .pullImageCount(3)
 *             .pullImageTagPattern()
 *             .pullMaxTags(0)
 *             .pullRepoPatterns(null)
 *             .pullRepoPatternsExcluded()
 *             .pullTagPatterns(null)
 *             .registriesType(&#34;cloud&#34;)
 *             .registryScanTimeout(0)
 *             .scannerNames(            
 *                 &#34;aqua-scanner-222222-cl9qx&#34;,
 *                 &#34;aqua-scanner-111111-fstrc&#34;,
 *                 &#34;513882222222&#34;)
 *             .scannerType(&#34;specific&#34;)
 *             .url(&#34;ap-northeast-1&#34;)
 *             .username(&#34;&#34;)
 *             .webhook(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="aquasec:index/integrationRegistry:IntegrationRegistry")
public class IntegrationRegistry extends com.pulumi.resources.CustomResource {
    /**
     * The username of the user who created or last modified the registry
     * 
     */
    @Export(name="author", refs={String.class}, tree="[0]")
    private Output<String> author;

    /**
     * @return The username of the user who created or last modified the registry
     * 
     */
    public Output<String> author() {
        return this.author;
    }
    /**
     * Automatically clean up images and repositories which are no longer present in the registry from Aqua console
     * 
     */
    @Export(name="autoCleanup", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoCleanup;

    /**
     * @return Automatically clean up images and repositories which are no longer present in the registry from Aqua console
     * 
     */
    public Output<Optional<Boolean>> autoCleanup() {
        return Codegen.optional(this.autoCleanup);
    }
    /**
     * Whether to automatically pull images from the registry on creation and daily
     * 
     */
    @Export(name="autoPull", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoPull;

    /**
     * @return Whether to automatically pull images from the registry on creation and daily
     * 
     */
    public Output<Optional<Boolean>> autoPull() {
        return Codegen.optional(this.autoPull);
    }
    /**
     * The interval in days to start pulling new images from the registry, Defaults to 1
     * 
     */
    @Export(name="autoPullInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> autoPullInterval;

    /**
     * @return The interval in days to start pulling new images from the registry, Defaults to 1
     * 
     */
    public Output<Optional<Integer>> autoPullInterval() {
        return Codegen.optional(this.autoPullInterval);
    }
    /**
     * Maximum number of repositories to pull every day, defaults to 100
     * 
     */
    @Export(name="autoPullMax", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> autoPullMax;

    /**
     * @return Maximum number of repositories to pull every day, defaults to 100
     * 
     */
    public Output<Optional<Integer>> autoPullMax() {
        return Codegen.optional(this.autoPullMax);
    }
    /**
     * Whether to automatically pull and rescan images from the registry on creation and daily
     * 
     */
    @Export(name="autoPullRescan", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoPullRescan;

    /**
     * @return Whether to automatically pull and rescan images from the registry on creation and daily
     * 
     */
    public Output<Optional<Boolean>> autoPullRescan() {
        return Codegen.optional(this.autoPullRescan);
    }
    /**
     * The time of day to start pulling new images from the registry, in the format HH:MM (24-hour clock), defaults to 03:00
     * 
     */
    @Export(name="autoPullTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> autoPullTime;

    /**
     * @return The time of day to start pulling new images from the registry, in the format HH:MM (24-hour clock), defaults to 03:00
     * 
     */
    public Output<Optional<String>> autoPullTime() {
        return Codegen.optional(this.autoPullTime);
    }
    /**
     * The description of the registry
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the registry
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Additional condition for pulling and rescanning images, Defaults to &#39;none&#39;
     * 
     */
    @Export(name="imageCreationDateCondition", refs={String.class}, tree="[0]")
    private Output<String> imageCreationDateCondition;

    /**
     * @return Additional condition for pulling and rescanning images, Defaults to &#39;none&#39;
     * 
     */
    public Output<String> imageCreationDateCondition() {
        return this.imageCreationDateCondition;
    }
    /**
     * The last time the registry was modified in UNIX time
     * 
     */
    @Export(name="lastUpdated", refs={String.class}, tree="[0]")
    private Output<String> lastUpdated;

    /**
     * @return The last time the registry was modified in UNIX time
     * 
     */
    public Output<String> lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * The name of the registry; string, required - this will be treated as the registry&#39;s ID, so choose a simple alphanumerical name without special signs and spaces
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the registry; string, required - this will be treated as the registry&#39;s ID, so choose a simple alphanumerical name without special signs and spaces
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="options", refs={List.class,IntegrationRegistryOption.class}, tree="[0,1]")
    private Output</* @Nullable */ List<IntegrationRegistryOption>> options;

    public Output<Optional<List<IntegrationRegistryOption>>> options() {
        return Codegen.optional(this.options);
    }
    /**
     * The password for registry authentication
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return The password for registry authentication
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * List of possible prefixes to image names pulled from the registry
     * 
     */
    @Export(name="prefixes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> prefixes;

    /**
     * @return List of possible prefixes to image names pulled from the registry
     * 
     */
    public Output<List<String>> prefixes() {
        return this.prefixes;
    }
    /**
     * When auto pull image enabled, sets maximum age of auto pulled images (for example for 5 Days the value should be: 5D), Requires `image_creation_date_condition = &#34;image_age&#34;`
     * 
     */
    @Export(name="pullImageAge", refs={String.class}, tree="[0]")
    private Output<String> pullImageAge;

    /**
     * @return When auto pull image enabled, sets maximum age of auto pulled images (for example for 5 Days the value should be: 5D), Requires `image_creation_date_condition = &#34;image_age&#34;`
     * 
     */
    public Output<String> pullImageAge() {
        return this.pullImageAge;
    }
    /**
     * When auto pull image enabled, sets maximum age of auto pulled images tags from each repository (based on image creation date) Requires `image_creation_date_condition = &#34;image_count&#34;`
     * 
     */
    @Export(name="pullImageCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> pullImageCount;

    /**
     * @return When auto pull image enabled, sets maximum age of auto pulled images tags from each repository (based on image creation date) Requires `image_creation_date_condition = &#34;image_count&#34;`
     * 
     */
    public Output<Integer> pullImageCount() {
        return this.pullImageCount;
    }
    /**
     * List of scanner names
     * 
     */
    @Export(name="scannerNames", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> scannerNames;

    /**
     * @return List of scanner names
     * 
     */
    public Output<Optional<List<String>>> scannerNames() {
        return Codegen.optional(this.scannerNames);
    }
    /**
     * The Scanner type
     * 
     */
    @Export(name="scannerType", refs={String.class}, tree="[0]")
    private Output<String> scannerType;

    /**
     * @return The Scanner type
     * 
     */
    public Output<String> scannerType() {
        return this.scannerType;
    }
    /**
     * Registry type (HUB / V1 / V2 / ENGINE / AWS / GCR).
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Registry type (HUB / V1 / V2 / ENGINE / AWS / GCR).
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The URL, address or region of the registry
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL, address or region of the registry
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * The username for registry authentication.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return The username for registry authentication.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationRegistry(String name) {
        this(name, IntegrationRegistryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationRegistry(String name, IntegrationRegistryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationRegistry(String name, IntegrationRegistryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/integrationRegistry:IntegrationRegistry", name, args == null ? IntegrationRegistryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IntegrationRegistry(String name, Output<String> id, @Nullable IntegrationRegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/integrationRegistry:IntegrationRegistry", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationRegistry get(String name, Output<String> id, @Nullable IntegrationRegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationRegistry(name, id, state, options);
    }
}
