// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.aquasec.NotificationArgs;
import com.pulumiverse.aquasec.Utilities;
import com.pulumiverse.aquasec.inputs.NotificationState;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Provides a Aquasec Notification resource. This can be used to create and manage Aquasec Notification resources.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aquasec.Notification;
 * import com.pulumi.aquasec.NotificationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var teams = new Notification(&#34;teams&#34;, NotificationArgs.builder()        
 *             .properties(Map.of(&#34;url&#34;, &#34;&lt;TEAMS-URL&gt;&#34;))
 *             .type(&#34;teams&#34;)
 *             .build());
 * 
 *         var slack = new Notification(&#34;slack&#34;, NotificationArgs.builder()        
 *             .properties(Map.of(&#34;url&#34;, &#34;&lt;SLACK-URL&gt;&#34;))
 *             .type(&#34;slack&#34;)
 *             .build());
 * 
 *         var webhook = new Notification(&#34;webhook&#34;, NotificationArgs.builder()        
 *             .properties(Map.of(&#34;url&#34;, &#34;&lt;WEBHOOK-URL&gt;&#34;))
 *             .type(&#34;webhook&#34;)
 *             .build());
 * 
 *         var servicenow = new Notification(&#34;servicenow&#34;, NotificationArgs.builder()        
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;board_name&#34;, &#34;&#34;),
 *                 Map.entry(&#34;instance_name&#34;, &#34;&#34;),
 *                 Map.entry(&#34;password&#34;, &#34;&lt;PASSWORD&gt;&#34;),
 *                 Map.entry(&#34;url&#34;, &#34;&lt;SERVICENOW-URL&gt;&#34;),
 *                 Map.entry(&#34;user&#34;, &#34;&lt;USERNAME&gt;&#34;)
 *             ))
 *             .type(&#34;serviceNow&#34;)
 *             .build());
 * 
 *         var jiraWithToken = new Notification(&#34;jiraWithToken&#34;, NotificationArgs.builder()        
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;definition_of_done&#34;, &#34;Done&#34;),
 *                 Map.entry(&#34;project_key&#34;, &#34;&lt;JIRA_PROJECT_KEY&gt;&#34;),
 *                 Map.entry(&#34;summary&#34;, &#34;SOME_TEXT&#34;),
 *                 Map.entry(&#34;token&#34;, &#34;&lt;JIRA-TOKEN&gt;&#34;),
 *                 Map.entry(&#34;url&#34;, &#34;&lt;JIRA-URL&gt;&#34;)
 *             ))
 *             .type(&#34;jira&#34;)
 *             .build());
 * 
 *         var jiraWithCreds = new Notification(&#34;jiraWithCreds&#34;, NotificationArgs.builder()        
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;password&#34;, &#34;&lt;JIRA_PASSWORD&gt;&#34;),
 *                 Map.entry(&#34;project_key&#34;, &#34;&lt;JIRA_PROJECT_KEY&gt;&#34;),
 *                 Map.entry(&#34;summary&#34;, &#34;SOME_TEXT&#34;),
 *                 Map.entry(&#34;url&#34;, &#34;&lt;JIRA-URL&gt;&#34;),
 *                 Map.entry(&#34;user&#34;, &#34;&lt;JIRA_USERNAME&gt;&#34;)
 *             ))
 *             .type(&#34;jira&#34;)
 *             .build());
 * 
 *         var emailWithCreds = new Notification(&#34;emailWithCreds&#34;, NotificationArgs.builder()        
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;host&#34;, &#34;&lt;EMAIL_HOST&gt;&#34;),
 *                 Map.entry(&#34;password&#34;, &#34;&lt;EMAIL_PASSWORD&gt;&#34;),
 *                 Map.entry(&#34;port&#34;, &#34;&lt;EMAIL_PORT&gt;&#34;),
 *                 Map.entry(&#34;recipients&#34;, &#34;&lt;RECIPIENTS&gt;&#34;),
 *                 Map.entry(&#34;sender&#34;, &#34;&lt;SENDER_EMAIL_ADDRESS&gt;&#34;),
 *                 Map.entry(&#34;user&#34;, &#34;&lt;EMAIL_USERNAME&gt;&#34;)
 *             ))
 *             .type(&#34;email&#34;)
 *             .build());
 * 
 *         var emailWithMx = new Notification(&#34;emailWithMx&#34;, NotificationArgs.builder()        
 *             .properties(Map.ofEntries(
 *                 Map.entry(&#34;port&#34;, &#34;&lt;EMAIL_PORT&gt;&#34;),
 *                 Map.entry(&#34;recipients&#34;, &#34;&lt;RECIPIENTS&gt;&#34;),
 *                 Map.entry(&#34;sender&#34;, &#34;&lt;SENDER_EMAIL_ADDRESS&gt;&#34;),
 *                 Map.entry(&#34;use_mx&#34;, true)
 *             ))
 *             .type(&#34;email&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="aquasec:index/notification:Notification")
public class Notification extends com.pulumi.resources.CustomResource {
    /**
     * The user that created the notification
     * 
     */
    @Export(name="author", refs={String.class}, tree="[0]")
    private Output<String> author;

    /**
     * @return The user that created the notification
     * 
     */
    public Output<String> author() {
        return this.author;
    }
    /**
     * Notification last update time
     * 
     */
    @Export(name="lastUpdated", refs={String.class}, tree="[0]")
    private Output<String> lastUpdated;

    /**
     * @return Notification last update time
     * 
     */
    public Output<String> lastUpdated() {
        return this.lastUpdated;
    }
    /**
     * Notification name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Notification name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Notification properties, please check the examples for setting it
     * 
     */
    @Export(name="properties", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> properties;

    /**
     * @return Notification properties, please check the examples for setting it
     * 
     */
    public Output<Map<String,String>> properties() {
        return this.properties;
    }
    /**
     * Notification Template
     * 
     */
    @Export(name="template", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> template;

    /**
     * @return Notification Template
     * 
     */
    public Output<Map<String,String>> template() {
        return this.template;
    }
    /**
     * Notifications types, allowed values: slack\ jira\ email\ teams\ webhook\ splunk\ serviceNow
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Notifications types, allowed values: slack\ jira\ email\ teams\ webhook\ splunk\ serviceNow
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Notification(String name) {
        this(name, NotificationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Notification(String name, NotificationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Notification(String name, NotificationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/notification:Notification", name, args == null ? NotificationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Notification(String name, Output<String> id, @Nullable NotificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/notification:Notification", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Notification get(String name, Output<String> id, @Nullable NotificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Notification(name, id, state, options);
    }
}
