// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.aquasec.inputs.RoleMappingOauth2Args;
import com.pulumiverse.aquasec.inputs.RoleMappingOpenidArgs;
import com.pulumiverse.aquasec.inputs.RoleMappingSamlArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleMappingArgs Empty = new RoleMappingArgs();

    /**
     * Oauth2 Authentication
     * 
     */
    @Import(name="oauth2")
    private @Nullable Output<RoleMappingOauth2Args> oauth2;

    /**
     * @return Oauth2 Authentication
     * 
     */
    public Optional<Output<RoleMappingOauth2Args>> oauth2() {
        return Optional.ofNullable(this.oauth2);
    }

    /**
     * OpenId Authentication
     * 
     */
    @Import(name="openid")
    private @Nullable Output<RoleMappingOpenidArgs> openid;

    /**
     * @return OpenId Authentication
     * 
     */
    public Optional<Output<RoleMappingOpenidArgs>> openid() {
        return Optional.ofNullable(this.openid);
    }

    /**
     * SAML Authentication
     * 
     */
    @Import(name="saml")
    private @Nullable Output<RoleMappingSamlArgs> saml;

    /**
     * @return SAML Authentication
     * 
     */
    public Optional<Output<RoleMappingSamlArgs>> saml() {
        return Optional.ofNullable(this.saml);
    }

    private RoleMappingArgs() {}

    private RoleMappingArgs(RoleMappingArgs $) {
        this.oauth2 = $.oauth2;
        this.openid = $.openid;
        this.saml = $.saml;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleMappingArgs $;

        public Builder() {
            $ = new RoleMappingArgs();
        }

        public Builder(RoleMappingArgs defaults) {
            $ = new RoleMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param oauth2 Oauth2 Authentication
         * 
         * @return builder
         * 
         */
        public Builder oauth2(@Nullable Output<RoleMappingOauth2Args> oauth2) {
            $.oauth2 = oauth2;
            return this;
        }

        /**
         * @param oauth2 Oauth2 Authentication
         * 
         * @return builder
         * 
         */
        public Builder oauth2(RoleMappingOauth2Args oauth2) {
            return oauth2(Output.of(oauth2));
        }

        /**
         * @param openid OpenId Authentication
         * 
         * @return builder
         * 
         */
        public Builder openid(@Nullable Output<RoleMappingOpenidArgs> openid) {
            $.openid = openid;
            return this;
        }

        /**
         * @param openid OpenId Authentication
         * 
         * @return builder
         * 
         */
        public Builder openid(RoleMappingOpenidArgs openid) {
            return openid(Output.of(openid));
        }

        /**
         * @param saml SAML Authentication
         * 
         * @return builder
         * 
         */
        public Builder saml(@Nullable Output<RoleMappingSamlArgs> saml) {
            $.saml = saml;
            return this;
        }

        /**
         * @param saml SAML Authentication
         * 
         * @return builder
         * 
         */
        public Builder saml(RoleMappingSamlArgs saml) {
            return saml(Output.of(saml));
        }

        public RoleMappingArgs build() {
            return $;
        }
    }

}
