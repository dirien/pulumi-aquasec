// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.aquasec.ServiceArgs;
import com.pulumiverse.aquasec.Utilities;
import com.pulumiverse.aquasec.inputs.ServiceState;
import com.pulumiverse.aquasec.outputs.ServiceScopeVariable;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="aquasec:index/service:Service")
public class Service extends com.pulumi.resources.CustomResource {
    /**
     * Indicates the application scope of the service.
     * 
     */
    @Export(name="applicationScopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> applicationScopes;

    /**
     * @return Indicates the application scope of the service.
     * 
     */
    public Output<List<String>> applicationScopes() {
        return this.applicationScopes;
    }
    /**
     * Username of the account that created the service.
     * 
     */
    @Export(name="author", refs={String.class}, tree="[0]")
    private Output<String> author;

    /**
     * @return Username of the account that created the service.
     * 
     */
    public Output<String> author() {
        return this.author;
    }
    /**
     * The number of containers associated with the service.
     * 
     */
    @Export(name="containersCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> containersCount;

    /**
     * @return The number of containers associated with the service.
     * 
     */
    public Output<Integer> containersCount() {
        return this.containersCount;
    }
    /**
     * A textual description of the service record; maximum 500 characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A textual description of the service record; maximum 500 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Enforcement status of the service.
     * 
     */
    @Export(name="enforce", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enforce;

    /**
     * @return Enforcement status of the service.
     * 
     */
    public Output<Optional<Boolean>> enforce() {
        return Codegen.optional(this.enforce);
    }
    /**
     * Whether the service has been evaluated for security vulnerabilities.
     * 
     */
    @Export(name="evaluated", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> evaluated;

    /**
     * @return Whether the service has been evaluated for security vulnerabilities.
     * 
     */
    public Output<Boolean> evaluated() {
        return this.evaluated;
    }
    /**
     * Indicates if registered or not.
     * 
     */
    @Export(name="isRegistered", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isRegistered;

    /**
     * @return Indicates if registered or not.
     * 
     */
    public Output<Boolean> isRegistered() {
        return this.isRegistered;
    }
    /**
     * Timestamp of the last update in Unix time format.
     * 
     */
    @Export(name="lastupdate", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastupdate;

    /**
     * @return Timestamp of the last update in Unix time format.
     * 
     */
    public Output<Integer> lastupdate() {
        return this.lastupdate;
    }
    /**
     * Indicates if monitoring is enabled or not
     * 
     */
    @Export(name="monitoring", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> monitoring;

    /**
     * @return Indicates if monitoring is enabled or not
     * 
     */
    public Output<Optional<Boolean>> monitoring() {
        return Codegen.optional(this.monitoring);
    }
    /**
     * The name of the service. It is recommended not to use whitespace characters in the name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the service. It is recommended not to use whitespace characters in the name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of container that are not evaluated.
     * 
     */
    @Export(name="notEvaluatedCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> notEvaluatedCount;

    /**
     * @return The number of container that are not evaluated.
     * 
     */
    public Output<Integer> notEvaluatedCount() {
        return this.notEvaluatedCount;
    }
    /**
     * The service&#39;s policies; an array of container firewall policy names.
     * 
     */
    @Export(name="policies", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> policies;

    /**
     * @return The service&#39;s policies; an array of container firewall policy names.
     * 
     */
    public Output<List<String>> policies() {
        return this.policies;
    }
    /**
     * Rules priority, must be between 1-100.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> priority;

    /**
     * @return Rules priority, must be between 1-100.
     * 
     */
    public Output<Optional<Integer>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * Logical expression of how to compute the dependency of the scope variables.
     * 
     */
    @Export(name="scopeExpression", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scopeExpression;

    /**
     * @return Logical expression of how to compute the dependency of the scope variables.
     * 
     */
    public Output<Optional<String>> scopeExpression() {
        return Codegen.optional(this.scopeExpression);
    }
    /**
     * List of scope attributes.
     * 
     */
    @Export(name="scopeVariables", refs={List.class,ServiceScopeVariable.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServiceScopeVariable>> scopeVariables;

    /**
     * @return List of scope attributes.
     * 
     */
    public Output<Optional<List<ServiceScopeVariable>>> scopeVariables() {
        return Codegen.optional(this.scopeVariables);
    }
    /**
     * Type of the workload. container or host.
     * 
     */
    @Export(name="target", refs={String.class}, tree="[0]")
    private Output<String> target;

    /**
     * @return Type of the workload. container or host.
     * 
     */
    public Output<String> target() {
        return this.target;
    }
    /**
     * The number of containers allocated to the service that are not registered.
     * 
     */
    @Export(name="unregisteredCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> unregisteredCount;

    /**
     * @return The number of containers allocated to the service that are not registered.
     * 
     */
    public Output<Integer> unregisteredCount() {
        return this.unregisteredCount;
    }
    /**
     * Number of high severity vulnerabilities.
     * 
     */
    @Export(name="vulnerabilitiesHigh", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesHigh;

    /**
     * @return Number of high severity vulnerabilities.
     * 
     */
    public Output<Integer> vulnerabilitiesHigh() {
        return this.vulnerabilitiesHigh;
    }
    /**
     * Number of low severity vulnerabilities.
     * 
     */
    @Export(name="vulnerabilitiesLow", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesLow;

    /**
     * @return Number of low severity vulnerabilities.
     * 
     */
    public Output<Integer> vulnerabilitiesLow() {
        return this.vulnerabilitiesLow;
    }
    /**
     * Number of malware.
     * 
     */
    @Export(name="vulnerabilitiesMalware", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesMalware;

    /**
     * @return Number of malware.
     * 
     */
    public Output<Integer> vulnerabilitiesMalware() {
        return this.vulnerabilitiesMalware;
    }
    /**
     * Number of medium severity vulnerabilities.
     * 
     */
    @Export(name="vulnerabilitiesMedium", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesMedium;

    /**
     * @return Number of medium severity vulnerabilities.
     * 
     */
    public Output<Integer> vulnerabilitiesMedium() {
        return this.vulnerabilitiesMedium;
    }
    /**
     * Number of negligible vulnerabilities.
     * 
     */
    @Export(name="vulnerabilitiesNegligible", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesNegligible;

    /**
     * @return Number of negligible vulnerabilities.
     * 
     */
    public Output<Integer> vulnerabilitiesNegligible() {
        return this.vulnerabilitiesNegligible;
    }
    /**
     * The CVSS average vulnerabilities score.
     * 
     */
    @Export(name="vulnerabilitiesScoreAverage", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesScoreAverage;

    /**
     * @return The CVSS average vulnerabilities score.
     * 
     */
    public Output<Integer> vulnerabilitiesScoreAverage() {
        return this.vulnerabilitiesScoreAverage;
    }
    /**
     * Number of sensitive vulnerabilities.
     * 
     */
    @Export(name="vulnerabilitiesSensitive", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesSensitive;

    /**
     * @return Number of sensitive vulnerabilities.
     * 
     */
    public Output<Integer> vulnerabilitiesSensitive() {
        return this.vulnerabilitiesSensitive;
    }
    /**
     * Total number of vulnerabilities.
     * 
     */
    @Export(name="vulnerabilitiesTotal", refs={Integer.class}, tree="[0]")
    private Output<Integer> vulnerabilitiesTotal;

    /**
     * @return Total number of vulnerabilities.
     * 
     */
    public Output<Integer> vulnerabilitiesTotal() {
        return this.vulnerabilitiesTotal;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, ServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/service:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Service(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/service:Service", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, state, options);
    }
}
