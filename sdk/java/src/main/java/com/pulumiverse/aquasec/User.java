// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.aquasec.UserArgs;
import com.pulumiverse.aquasec.Utilities;
import com.pulumiverse.aquasec.inputs.UserState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The `aquasec.User` resource manages your users within Aqua.
 * 
 * The users created must have at least one Role that is already present within Aqua.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.aquasec.User;
 * import com.pulumi.aquasec.UserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var iaC = new User(&#34;iaC&#34;, UserArgs.builder()        
 *             .userId(&#34;IaC&#34;)
 *             .password(var_.password())
 *             .roles(&#34;infrastructure&#34;)
 *             .email(&#34;infrastructure@example.com&#34;)
 *             .firstTime(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="aquasec:index/user:User")
public class User extends com.pulumi.resources.CustomResource {
    /**
     * The user Email.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output</* @Nullable */ String> email;

    /**
     * @return The user Email.
     * 
     */
    public Output<Optional<String>> email() {
        return Codegen.optional(this.email);
    }
    /**
     * If the user must change the password first login. Applicable only one time, Later for user password resets use aqua console.
     * 
     */
    @Export(name="firstTime", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> firstTime;

    /**
     * @return If the user must change the password first login. Applicable only one time, Later for user password resets use aqua console.
     * 
     */
    public Output<Optional<Boolean>> firstTime() {
        return Codegen.optional(this.firstTime);
    }
    /**
     * Give the Permission Set full access, meaning all actions are allowed without restriction.
     * 
     */
    @Export(name="isSuper", type=Boolean.class, parameters={})
    private Output<Boolean> isSuper;

    /**
     * @return Give the Permission Set full access, meaning all actions are allowed without restriction.
     * 
     */
    public Output<Boolean> isSuper() {
        return this.isSuper;
    }
    /**
     * The user name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The user name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Login password for the user; string, required, at least 8 characters long.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output<String> password;

    /**
     * @return Login password for the user; string, required, at least 8 characters long.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * Password confirmation.
     * 
     */
    @Export(name="passwordConfirm", type=String.class, parameters={})
    private Output</* @Nullable */ String> passwordConfirm;

    /**
     * @return Password confirmation.
     * 
     */
    public Output<Optional<String>> passwordConfirm() {
        return Codegen.optional(this.passwordConfirm);
    }
    /**
     * User&#39;s Aqua plan (Developer / Team / Advanced).
     * 
     */
    @Export(name="plan", type=String.class, parameters={})
    private Output<String> plan;

    /**
     * @return User&#39;s Aqua plan (Developer / Team / Advanced).
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }
    /**
     * The first role that assigned to the user for backward compatibility.
     * 
     */
    @Export(name="role", type=String.class, parameters={})
    private Output<String> role;

    /**
     * @return The first role that assigned to the user for backward compatibility.
     * 
     */
    public Output<String> role() {
        return this.role;
    }
    /**
     * The roles that will be assigned to the user.
     * 
     */
    @Export(name="roles", type=List.class, parameters={String.class})
    private Output<List<String>> roles;

    /**
     * @return The roles that will be assigned to the user.
     * 
     */
    public Output<List<String>> roles() {
        return this.roles;
    }
    /**
     * The user type (Aqua, LDAP, SAML, OAuth2, OpenID, Tenant Manager).
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The user type (Aqua, LDAP, SAML, OAuth2, OpenID, Tenant Manager).
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Whether to allow UI access for users with this Permission Set.
     * 
     */
    @Export(name="uiAccess", type=Boolean.class, parameters={})
    private Output<Boolean> uiAccess;

    /**
     * @return Whether to allow UI access for users with this Permission Set.
     * 
     */
    public Output<Boolean> uiAccess() {
        return this.uiAccess;
    }
    /**
     * The user ID.
     * 
     */
    @Export(name="userId", type=String.class, parameters={})
    private Output<String> userId;

    /**
     * @return The user ID.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(String name, UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/user:User", name, args == null ? UserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private User(String name, Output<String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("aquasec:index/user:User", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(String name, Output<String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
