// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.aquasec.inputs.UserSaasGroupArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserSaasArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserSaasArgs Empty = new UserSaasArgs();

    @Import(name="accountAdmin", required=true)
    private Output<Boolean> accountAdmin;

    public Output<Boolean> accountAdmin() {
        return this.accountAdmin;
    }

    @Import(name="cspRoles", required=true)
    private Output<List<String>> cspRoles;

    public Output<List<String>> cspRoles() {
        return this.cspRoles;
    }

    @Import(name="email", required=true)
    private Output<String> email;

    public Output<String> email() {
        return this.email;
    }

    @Import(name="groups")
    private @Nullable Output<List<UserSaasGroupArgs>> groups;

    public Optional<Output<List<UserSaasGroupArgs>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    private UserSaasArgs() {}

    private UserSaasArgs(UserSaasArgs $) {
        this.accountAdmin = $.accountAdmin;
        this.cspRoles = $.cspRoles;
        this.email = $.email;
        this.groups = $.groups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserSaasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserSaasArgs $;

        public Builder() {
            $ = new UserSaasArgs();
        }

        public Builder(UserSaasArgs defaults) {
            $ = new UserSaasArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountAdmin(Output<Boolean> accountAdmin) {
            $.accountAdmin = accountAdmin;
            return this;
        }

        public Builder accountAdmin(Boolean accountAdmin) {
            return accountAdmin(Output.of(accountAdmin));
        }

        public Builder cspRoles(Output<List<String>> cspRoles) {
            $.cspRoles = cspRoles;
            return this;
        }

        public Builder cspRoles(List<String> cspRoles) {
            return cspRoles(Output.of(cspRoles));
        }

        public Builder cspRoles(String... cspRoles) {
            return cspRoles(List.of(cspRoles));
        }

        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder groups(@Nullable Output<List<UserSaasGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        public Builder groups(List<UserSaasGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        public Builder groups(UserSaasGroupArgs... groups) {
            return groups(List.of(groups));
        }

        public UserSaasArgs build() {
            $.accountAdmin = Objects.requireNonNull($.accountAdmin, "expected parameter 'accountAdmin' to be non-null");
            $.cspRoles = Objects.requireNonNull($.cspRoles, "expected parameter 'cspRoles' to be non-null");
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            return $;
        }
    }

}
