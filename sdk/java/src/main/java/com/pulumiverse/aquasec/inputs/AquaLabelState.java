// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AquaLabelState extends com.pulumi.resources.ResourceArgs {

    public static final AquaLabelState Empty = new AquaLabelState();

    /**
     * The name of the user who created the Aqua label.
     * 
     */
    @Import(name="author")
    private @Nullable Output<String> author;

    /**
     * @return The name of the user who created the Aqua label.
     * 
     */
    public Optional<Output<String>> author() {
        return Optional.ofNullable(this.author);
    }

    /**
     * The creation date of the Aqua label.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The creation date of the Aqua label.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * Aqua label description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Aqua label description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Aqua label name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Aqua label name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AquaLabelState() {}

    private AquaLabelState(AquaLabelState $) {
        this.author = $.author;
        this.created = $.created;
        this.description = $.description;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AquaLabelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AquaLabelState $;

        public Builder() {
            $ = new AquaLabelState();
        }

        public Builder(AquaLabelState defaults) {
            $ = new AquaLabelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param author The name of the user who created the Aqua label.
         * 
         * @return builder
         * 
         */
        public Builder author(@Nullable Output<String> author) {
            $.author = author;
            return this;
        }

        /**
         * @param author The name of the user who created the Aqua label.
         * 
         * @return builder
         * 
         */
        public Builder author(String author) {
            return author(Output.of(author));
        }

        /**
         * @param created The creation date of the Aqua label.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The creation date of the Aqua label.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param description Aqua label description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Aqua label description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Aqua label name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Aqua label name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AquaLabelState build() {
            return $;
        }
    }

}
