// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.aquasec.inputs.GetApplicationScopeCategoryArtifactArgs;
import com.pulumiverse.aquasec.inputs.GetApplicationScopeCategoryEntityScopeArgs;
import com.pulumiverse.aquasec.inputs.GetApplicationScopeCategoryInfrastructureArgs;
import com.pulumiverse.aquasec.inputs.GetApplicationScopeCategoryWorkloadArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationScopeCategoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetApplicationScopeCategoryArgs Empty = new GetApplicationScopeCategoryArgs();

    @Import(name="artifacts")
    private @Nullable Output<List<GetApplicationScopeCategoryArtifactArgs>> artifacts;

    public Optional<Output<List<GetApplicationScopeCategoryArtifactArgs>>> artifacts() {
        return Optional.ofNullable(this.artifacts);
    }

    @Import(name="entityScopes")
    private @Nullable Output<List<GetApplicationScopeCategoryEntityScopeArgs>> entityScopes;

    public Optional<Output<List<GetApplicationScopeCategoryEntityScopeArgs>>> entityScopes() {
        return Optional.ofNullable(this.entityScopes);
    }

    @Import(name="infrastructures")
    private @Nullable Output<List<GetApplicationScopeCategoryInfrastructureArgs>> infrastructures;

    public Optional<Output<List<GetApplicationScopeCategoryInfrastructureArgs>>> infrastructures() {
        return Optional.ofNullable(this.infrastructures);
    }

    @Import(name="workloads")
    private @Nullable Output<List<GetApplicationScopeCategoryWorkloadArgs>> workloads;

    public Optional<Output<List<GetApplicationScopeCategoryWorkloadArgs>>> workloads() {
        return Optional.ofNullable(this.workloads);
    }

    private GetApplicationScopeCategoryArgs() {}

    private GetApplicationScopeCategoryArgs(GetApplicationScopeCategoryArgs $) {
        this.artifacts = $.artifacts;
        this.entityScopes = $.entityScopes;
        this.infrastructures = $.infrastructures;
        this.workloads = $.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationScopeCategoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationScopeCategoryArgs $;

        public Builder() {
            $ = new GetApplicationScopeCategoryArgs();
        }

        public Builder(GetApplicationScopeCategoryArgs defaults) {
            $ = new GetApplicationScopeCategoryArgs(Objects.requireNonNull(defaults));
        }

        public Builder artifacts(@Nullable Output<List<GetApplicationScopeCategoryArtifactArgs>> artifacts) {
            $.artifacts = artifacts;
            return this;
        }

        public Builder artifacts(List<GetApplicationScopeCategoryArtifactArgs> artifacts) {
            return artifacts(Output.of(artifacts));
        }

        public Builder artifacts(GetApplicationScopeCategoryArtifactArgs... artifacts) {
            return artifacts(List.of(artifacts));
        }

        public Builder entityScopes(@Nullable Output<List<GetApplicationScopeCategoryEntityScopeArgs>> entityScopes) {
            $.entityScopes = entityScopes;
            return this;
        }

        public Builder entityScopes(List<GetApplicationScopeCategoryEntityScopeArgs> entityScopes) {
            return entityScopes(Output.of(entityScopes));
        }

        public Builder entityScopes(GetApplicationScopeCategoryEntityScopeArgs... entityScopes) {
            return entityScopes(List.of(entityScopes));
        }

        public Builder infrastructures(@Nullable Output<List<GetApplicationScopeCategoryInfrastructureArgs>> infrastructures) {
            $.infrastructures = infrastructures;
            return this;
        }

        public Builder infrastructures(List<GetApplicationScopeCategoryInfrastructureArgs> infrastructures) {
            return infrastructures(Output.of(infrastructures));
        }

        public Builder infrastructures(GetApplicationScopeCategoryInfrastructureArgs... infrastructures) {
            return infrastructures(List.of(infrastructures));
        }

        public Builder workloads(@Nullable Output<List<GetApplicationScopeCategoryWorkloadArgs>> workloads) {
            $.workloads = workloads;
            return this;
        }

        public Builder workloads(List<GetApplicationScopeCategoryWorkloadArgs> workloads) {
            return workloads(Output.of(workloads));
        }

        public Builder workloads(GetApplicationScopeCategoryWorkloadArgs... workloads) {
            return workloads(List.of(workloads));
        }

        public GetApplicationScopeCategoryArgs build() {
            return $;
        }
    }

}
