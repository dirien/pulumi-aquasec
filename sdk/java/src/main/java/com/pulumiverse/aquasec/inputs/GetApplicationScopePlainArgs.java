// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumiverse.aquasec.inputs.GetApplicationScopeCategory;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationScopePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationScopePlainArgs Empty = new GetApplicationScopePlainArgs();

    /**
     * Artifacts (of applications) / Workloads (containers) / Infrastructure (elements).
     * 
     */
    @Import(name="categories")
    private @Nullable List<GetApplicationScopeCategory> categories;

    /**
     * @return Artifacts (of applications) / Workloads (containers) / Infrastructure (elements).
     * 
     */
    public Optional<List<GetApplicationScopeCategory>> categories() {
        return Optional.ofNullable(this.categories);
    }

    /**
     * Description of the application scope.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Description of the application scope.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of an application scope.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of an application scope.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Name of an application scope.
     * 
     */
    @Import(name="ownerEmail")
    private @Nullable String ownerEmail;

    /**
     * @return Name of an application scope.
     * 
     */
    public Optional<String> ownerEmail() {
        return Optional.ofNullable(this.ownerEmail);
    }

    private GetApplicationScopePlainArgs() {}

    private GetApplicationScopePlainArgs(GetApplicationScopePlainArgs $) {
        this.categories = $.categories;
        this.description = $.description;
        this.name = $.name;
        this.ownerEmail = $.ownerEmail;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationScopePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationScopePlainArgs $;

        public Builder() {
            $ = new GetApplicationScopePlainArgs();
        }

        public Builder(GetApplicationScopePlainArgs defaults) {
            $ = new GetApplicationScopePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param categories Artifacts (of applications) / Workloads (containers) / Infrastructure (elements).
         * 
         * @return builder
         * 
         */
        public Builder categories(@Nullable List<GetApplicationScopeCategory> categories) {
            $.categories = categories;
            return this;
        }

        /**
         * @param categories Artifacts (of applications) / Workloads (containers) / Infrastructure (elements).
         * 
         * @return builder
         * 
         */
        public Builder categories(GetApplicationScopeCategory... categories) {
            return categories(List.of(categories));
        }

        /**
         * @param description Description of the application scope.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param name Name of an application scope.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param ownerEmail Name of an application scope.
         * 
         * @return builder
         * 
         */
        public Builder ownerEmail(@Nullable String ownerEmail) {
            $.ownerEmail = ownerEmail;
            return this;
        }

        public GetApplicationScopePlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
