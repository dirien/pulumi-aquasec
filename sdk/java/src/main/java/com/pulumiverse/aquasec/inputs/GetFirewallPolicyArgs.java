// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.aquasec.inputs.GetFirewallPolicyOutboundNetworkArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFirewallPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFirewallPolicyArgs Empty = new GetFirewallPolicyArgs();

    /**
     * Name of the policy, no longer than 128 characters and no slash characters.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the policy, no longer than 128 characters and no slash characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Information on network addresses that are allowed to receive data or requests.
     * 
     */
    @Import(name="outboundNetworks")
    private @Nullable Output<List<GetFirewallPolicyOutboundNetworkArgs>> outboundNetworks;

    /**
     * @return Information on network addresses that are allowed to receive data or requests.
     * 
     */
    public Optional<Output<List<GetFirewallPolicyOutboundNetworkArgs>>> outboundNetworks() {
        return Optional.ofNullable(this.outboundNetworks);
    }

    private GetFirewallPolicyArgs() {}

    private GetFirewallPolicyArgs(GetFirewallPolicyArgs $) {
        this.name = $.name;
        this.outboundNetworks = $.outboundNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFirewallPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFirewallPolicyArgs $;

        public Builder() {
            $ = new GetFirewallPolicyArgs();
        }

        public Builder(GetFirewallPolicyArgs defaults) {
            $ = new GetFirewallPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the policy, no longer than 128 characters and no slash characters.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the policy, no longer than 128 characters and no slash characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outboundNetworks Information on network addresses that are allowed to receive data or requests.
         * 
         * @return builder
         * 
         */
        public Builder outboundNetworks(@Nullable Output<List<GetFirewallPolicyOutboundNetworkArgs>> outboundNetworks) {
            $.outboundNetworks = outboundNetworks;
            return this;
        }

        /**
         * @param outboundNetworks Information on network addresses that are allowed to receive data or requests.
         * 
         * @return builder
         * 
         */
        public Builder outboundNetworks(List<GetFirewallPolicyOutboundNetworkArgs> outboundNetworks) {
            return outboundNetworks(Output.of(outboundNetworks));
        }

        /**
         * @param outboundNetworks Information on network addresses that are allowed to receive data or requests.
         * 
         * @return builder
         * 
         */
        public Builder outboundNetworks(GetFirewallPolicyOutboundNetworkArgs... outboundNetworks) {
            return outboundNetworks(List.of(outboundNetworks));
        }

        public GetFirewallPolicyArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
