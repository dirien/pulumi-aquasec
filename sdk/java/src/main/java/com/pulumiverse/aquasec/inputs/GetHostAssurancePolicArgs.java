// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHostAssurancePolicArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetHostAssurancePolicArgs Empty = new GetHostAssurancePolicArgs();

    /**
     * Indicates that policy should ignore cases that do not have a known fix.
     * 
     */
    @Import(name="maximumScoreExcludeNoFix")
    private @Nullable Output<Boolean> maximumScoreExcludeNoFix;

    /**
     * @return Indicates that policy should ignore cases that do not have a known fix.
     * 
     */
    public Optional<Output<Boolean>> maximumScoreExcludeNoFix() {
        return Optional.ofNullable(this.maximumScoreExcludeNoFix);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    private GetHostAssurancePolicArgs() {}

    private GetHostAssurancePolicArgs(GetHostAssurancePolicArgs $) {
        this.maximumScoreExcludeNoFix = $.maximumScoreExcludeNoFix;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHostAssurancePolicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHostAssurancePolicArgs $;

        public Builder() {
            $ = new GetHostAssurancePolicArgs();
        }

        public Builder(GetHostAssurancePolicArgs defaults) {
            $ = new GetHostAssurancePolicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maximumScoreExcludeNoFix Indicates that policy should ignore cases that do not have a known fix.
         * 
         * @return builder
         * 
         */
        public Builder maximumScoreExcludeNoFix(@Nullable Output<Boolean> maximumScoreExcludeNoFix) {
            $.maximumScoreExcludeNoFix = maximumScoreExcludeNoFix;
            return this;
        }

        /**
         * @param maximumScoreExcludeNoFix Indicates that policy should ignore cases that do not have a known fix.
         * 
         * @return builder
         * 
         */
        public Builder maximumScoreExcludeNoFix(Boolean maximumScoreExcludeNoFix) {
            return maximumScoreExcludeNoFix(Output.of(maximumScoreExcludeNoFix));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetHostAssurancePolicArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
