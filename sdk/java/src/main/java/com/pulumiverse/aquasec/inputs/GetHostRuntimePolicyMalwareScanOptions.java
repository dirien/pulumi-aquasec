// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHostRuntimePolicyMalwareScanOptions extends com.pulumi.resources.InvokeArgs {

    public static final GetHostRuntimePolicyMalwareScanOptions Empty = new GetHostRuntimePolicyMalwareScanOptions();

    /**
     * Set Action, Defaults to &#39;Alert&#39; when empty
     * 
     */
    @Import(name="action")
    private @Nullable String action;

    /**
     * @return Set Action, Defaults to &#39;Alert&#39; when empty
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Defines if enabled or not
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return Defines if enabled or not
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * List of registry processes to be excluded from being protected.
     * 
     */
    @Import(name="excludeProcesses")
    private @Nullable List<String> excludeProcesses;

    /**
     * @return List of registry processes to be excluded from being protected.
     * 
     */
    public Optional<List<String>> excludeProcesses() {
        return Optional.ofNullable(this.excludeProcesses);
    }

    /**
     * List of directories to be protected.
     * 
     */
    @Import(name="includeDirectories")
    private @Nullable List<String> includeDirectories;

    /**
     * @return List of directories to be protected.
     * 
     */
    public Optional<List<String>> includeDirectories() {
        return Optional.ofNullable(this.includeDirectories);
    }

    private GetHostRuntimePolicyMalwareScanOptions() {}

    private GetHostRuntimePolicyMalwareScanOptions(GetHostRuntimePolicyMalwareScanOptions $) {
        this.action = $.action;
        this.enabled = $.enabled;
        this.excludeProcesses = $.excludeProcesses;
        this.includeDirectories = $.includeDirectories;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHostRuntimePolicyMalwareScanOptions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHostRuntimePolicyMalwareScanOptions $;

        public Builder() {
            $ = new GetHostRuntimePolicyMalwareScanOptions();
        }

        public Builder(GetHostRuntimePolicyMalwareScanOptions defaults) {
            $ = new GetHostRuntimePolicyMalwareScanOptions(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Set Action, Defaults to &#39;Alert&#39; when empty
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable String action) {
            $.action = action;
            return this;
        }

        /**
         * @param enabled Defines if enabled or not
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param excludeProcesses List of registry processes to be excluded from being protected.
         * 
         * @return builder
         * 
         */
        public Builder excludeProcesses(@Nullable List<String> excludeProcesses) {
            $.excludeProcesses = excludeProcesses;
            return this;
        }

        /**
         * @param excludeProcesses List of registry processes to be excluded from being protected.
         * 
         * @return builder
         * 
         */
        public Builder excludeProcesses(String... excludeProcesses) {
            return excludeProcesses(List.of(excludeProcesses));
        }

        /**
         * @param includeDirectories List of directories to be protected.
         * 
         * @return builder
         * 
         */
        public Builder includeDirectories(@Nullable List<String> includeDirectories) {
            $.includeDirectories = includeDirectories;
            return this;
        }

        /**
         * @param includeDirectories List of directories to be protected.
         * 
         * @return builder
         * 
         */
        public Builder includeDirectories(String... includeDirectories) {
            return includeDirectories(List.of(includeDirectories));
        }

        public GetHostRuntimePolicyMalwareScanOptions build() {
            return $;
        }
    }

}
