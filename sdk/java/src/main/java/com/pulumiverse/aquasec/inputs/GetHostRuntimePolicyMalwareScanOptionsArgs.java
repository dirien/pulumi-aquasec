// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHostRuntimePolicyMalwareScanOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetHostRuntimePolicyMalwareScanOptionsArgs Empty = new GetHostRuntimePolicyMalwareScanOptionsArgs();

    /**
     * Set Action, Defaults to &#39;Alert&#39; when empty
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Set Action, Defaults to &#39;Alert&#39; when empty
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Defines if enabled or not
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Defines if enabled or not
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * List of registry processes to be excluded from being protected.
     * 
     */
    @Import(name="excludeProcesses")
    private @Nullable Output<List<String>> excludeProcesses;

    /**
     * @return List of registry processes to be excluded from being protected.
     * 
     */
    public Optional<Output<List<String>>> excludeProcesses() {
        return Optional.ofNullable(this.excludeProcesses);
    }

    /**
     * List of directories to be protected.
     * 
     */
    @Import(name="includeDirectories")
    private @Nullable Output<List<String>> includeDirectories;

    /**
     * @return List of directories to be protected.
     * 
     */
    public Optional<Output<List<String>>> includeDirectories() {
        return Optional.ofNullable(this.includeDirectories);
    }

    private GetHostRuntimePolicyMalwareScanOptionsArgs() {}

    private GetHostRuntimePolicyMalwareScanOptionsArgs(GetHostRuntimePolicyMalwareScanOptionsArgs $) {
        this.action = $.action;
        this.enabled = $.enabled;
        this.excludeProcesses = $.excludeProcesses;
        this.includeDirectories = $.includeDirectories;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHostRuntimePolicyMalwareScanOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHostRuntimePolicyMalwareScanOptionsArgs $;

        public Builder() {
            $ = new GetHostRuntimePolicyMalwareScanOptionsArgs();
        }

        public Builder(GetHostRuntimePolicyMalwareScanOptionsArgs defaults) {
            $ = new GetHostRuntimePolicyMalwareScanOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Set Action, Defaults to &#39;Alert&#39; when empty
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Set Action, Defaults to &#39;Alert&#39; when empty
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param enabled Defines if enabled or not
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Defines if enabled or not
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param excludeProcesses List of registry processes to be excluded from being protected.
         * 
         * @return builder
         * 
         */
        public Builder excludeProcesses(@Nullable Output<List<String>> excludeProcesses) {
            $.excludeProcesses = excludeProcesses;
            return this;
        }

        /**
         * @param excludeProcesses List of registry processes to be excluded from being protected.
         * 
         * @return builder
         * 
         */
        public Builder excludeProcesses(List<String> excludeProcesses) {
            return excludeProcesses(Output.of(excludeProcesses));
        }

        /**
         * @param excludeProcesses List of registry processes to be excluded from being protected.
         * 
         * @return builder
         * 
         */
        public Builder excludeProcesses(String... excludeProcesses) {
            return excludeProcesses(List.of(excludeProcesses));
        }

        /**
         * @param includeDirectories List of directories to be protected.
         * 
         * @return builder
         * 
         */
        public Builder includeDirectories(@Nullable Output<List<String>> includeDirectories) {
            $.includeDirectories = includeDirectories;
            return this;
        }

        /**
         * @param includeDirectories List of directories to be protected.
         * 
         * @return builder
         * 
         */
        public Builder includeDirectories(List<String> includeDirectories) {
            return includeDirectories(Output.of(includeDirectories));
        }

        /**
         * @param includeDirectories List of directories to be protected.
         * 
         * @return builder
         * 
         */
        public Builder includeDirectories(String... includeDirectories) {
            return includeDirectories(List.of(includeDirectories));
        }

        public GetHostRuntimePolicyMalwareScanOptionsArgs build() {
            return $;
        }
    }

}
