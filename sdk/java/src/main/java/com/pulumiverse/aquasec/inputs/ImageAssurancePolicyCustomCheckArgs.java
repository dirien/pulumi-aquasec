// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageAssurancePolicyCustomCheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageAssurancePolicyCustomCheckArgs Empty = new ImageAssurancePolicyCustomCheckArgs();

    /**
     * Name of user account that created the policy.
     * 
     */
    @Import(name="author")
    private @Nullable Output<String> author;

    /**
     * @return Name of user account that created the policy.
     * 
     */
    public Optional<Output<String>> author() {
        return Optional.ofNullable(this.author);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="engine")
    private @Nullable Output<String> engine;

    public Optional<Output<String>> engine() {
        return Optional.ofNullable(this.engine);
    }

    @Import(name="lastModified")
    private @Nullable Output<Integer> lastModified;

    public Optional<Output<Integer>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="path")
    private @Nullable Output<String> path;

    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    @Import(name="scriptId")
    private @Nullable Output<String> scriptId;

    public Optional<Output<String>> scriptId() {
        return Optional.ofNullable(this.scriptId);
    }

    @Import(name="severity")
    private @Nullable Output<String> severity;

    public Optional<Output<String>> severity() {
        return Optional.ofNullable(this.severity);
    }

    @Import(name="snippet")
    private @Nullable Output<String> snippet;

    public Optional<Output<String>> snippet() {
        return Optional.ofNullable(this.snippet);
    }

    private ImageAssurancePolicyCustomCheckArgs() {}

    private ImageAssurancePolicyCustomCheckArgs(ImageAssurancePolicyCustomCheckArgs $) {
        this.author = $.author;
        this.description = $.description;
        this.engine = $.engine;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.path = $.path;
        this.readOnly = $.readOnly;
        this.scriptId = $.scriptId;
        this.severity = $.severity;
        this.snippet = $.snippet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageAssurancePolicyCustomCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageAssurancePolicyCustomCheckArgs $;

        public Builder() {
            $ = new ImageAssurancePolicyCustomCheckArgs();
        }

        public Builder(ImageAssurancePolicyCustomCheckArgs defaults) {
            $ = new ImageAssurancePolicyCustomCheckArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param author Name of user account that created the policy.
         * 
         * @return builder
         * 
         */
        public Builder author(@Nullable Output<String> author) {
            $.author = author;
            return this;
        }

        /**
         * @param author Name of user account that created the policy.
         * 
         * @return builder
         * 
         */
        public Builder author(String author) {
            return author(Output.of(author));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder engine(@Nullable Output<String> engine) {
            $.engine = engine;
            return this;
        }

        public Builder engine(String engine) {
            return engine(Output.of(engine));
        }

        public Builder lastModified(@Nullable Output<Integer> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        public Builder lastModified(Integer lastModified) {
            return lastModified(Output.of(lastModified));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        public Builder scriptId(@Nullable Output<String> scriptId) {
            $.scriptId = scriptId;
            return this;
        }

        public Builder scriptId(String scriptId) {
            return scriptId(Output.of(scriptId));
        }

        public Builder severity(@Nullable Output<String> severity) {
            $.severity = severity;
            return this;
        }

        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        public Builder snippet(@Nullable Output<String> snippet) {
            $.snippet = snippet;
            return this;
        }

        public Builder snippet(String snippet) {
            return snippet(Output.of(snippet));
        }

        public ImageAssurancePolicyCustomCheckArgs build() {
            return $;
        }
    }

}
