// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageHistoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageHistoryArgs Empty = new ImageHistoryArgs();

    /**
     * The image creation comment.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return The image creation comment.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * The date and time when the image was registered.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The date and time when the image was registered.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * The ID of this resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of this resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="size")
    private @Nullable Output<Integer> size;

    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    private ImageHistoryArgs() {}

    private ImageHistoryArgs(ImageHistoryArgs $) {
        this.comment = $.comment;
        this.created = $.created;
        this.createdBy = $.createdBy;
        this.id = $.id;
        this.size = $.size;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageHistoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageHistoryArgs $;

        public Builder() {
            $ = new ImageHistoryArgs();
        }

        public Builder(ImageHistoryArgs defaults) {
            $ = new ImageHistoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment The image creation comment.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment The image creation comment.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param created The date and time when the image was registered.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The date and time when the image was registered.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public ImageHistoryArgs build() {
            return $;
        }
    }

}
