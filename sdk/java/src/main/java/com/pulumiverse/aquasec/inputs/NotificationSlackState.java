// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationSlackState extends com.pulumi.resources.ResourceArgs {

    public static final NotificationSlackState Empty = new NotificationSlackState();

    @Import(name="channel")
    private @Nullable Output<String> channel;

    public Optional<Output<String>> channel() {
        return Optional.ofNullable(this.channel);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="icon")
    private @Nullable Output<String> icon;

    public Optional<Output<String>> icon() {
        return Optional.ofNullable(this.icon);
    }

    @Import(name="mainText")
    private @Nullable Output<String> mainText;

    public Optional<Output<String>> mainText() {
        return Optional.ofNullable(this.mainText);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="serviceKey")
    private @Nullable Output<String> serviceKey;

    public Optional<Output<String>> serviceKey() {
        return Optional.ofNullable(this.serviceKey);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="userName")
    private @Nullable Output<String> userName;

    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    @Import(name="webhookUrl")
    private @Nullable Output<String> webhookUrl;

    public Optional<Output<String>> webhookUrl() {
        return Optional.ofNullable(this.webhookUrl);
    }

    private NotificationSlackState() {}

    private NotificationSlackState(NotificationSlackState $) {
        this.channel = $.channel;
        this.enabled = $.enabled;
        this.icon = $.icon;
        this.mainText = $.mainText;
        this.name = $.name;
        this.serviceKey = $.serviceKey;
        this.type = $.type;
        this.userName = $.userName;
        this.webhookUrl = $.webhookUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationSlackState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationSlackState $;

        public Builder() {
            $ = new NotificationSlackState();
        }

        public Builder(NotificationSlackState defaults) {
            $ = new NotificationSlackState(Objects.requireNonNull(defaults));
        }

        public Builder channel(@Nullable Output<String> channel) {
            $.channel = channel;
            return this;
        }

        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder icon(@Nullable Output<String> icon) {
            $.icon = icon;
            return this;
        }

        public Builder icon(String icon) {
            return icon(Output.of(icon));
        }

        public Builder mainText(@Nullable Output<String> mainText) {
            $.mainText = mainText;
            return this;
        }

        public Builder mainText(String mainText) {
            return mainText(Output.of(mainText));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder serviceKey(@Nullable Output<String> serviceKey) {
            $.serviceKey = serviceKey;
            return this;
        }

        public Builder serviceKey(String serviceKey) {
            return serviceKey(Output.of(serviceKey));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public Builder webhookUrl(@Nullable Output<String> webhookUrl) {
            $.webhookUrl = webhookUrl;
            return this;
        }

        public Builder webhookUrl(String webhookUrl) {
            return webhookUrl(Output.of(webhookUrl));
        }

        public NotificationSlackState build() {
            return $;
        }
    }

}
