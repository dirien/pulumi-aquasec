// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAcknowledgesAcknowledge {
    private String author;
    private String comment;
    private String date;
    private String dockerId;
    private String expirationConfiguredAt;
    private String expirationConfiguredBy;
    private Integer expirationDays;
    private String fixVersion;
    private String imageName;
    private String issueName;
    private String issueType;
    private String os;
    private String osVersion;
    private String permission;
    private String registryName;
    private String resourceCpe;
    private String resourceFormat;
    private String resourceHash;
    private String resourceName;
    private String resourcePath;
    private String resourceType;
    private String resourceVersion;

    private GetAcknowledgesAcknowledge() {}
    public String author() {
        return this.author;
    }
    public String comment() {
        return this.comment;
    }
    public String date() {
        return this.date;
    }
    public String dockerId() {
        return this.dockerId;
    }
    public String expirationConfiguredAt() {
        return this.expirationConfiguredAt;
    }
    public String expirationConfiguredBy() {
        return this.expirationConfiguredBy;
    }
    public Integer expirationDays() {
        return this.expirationDays;
    }
    public String fixVersion() {
        return this.fixVersion;
    }
    public String imageName() {
        return this.imageName;
    }
    public String issueName() {
        return this.issueName;
    }
    public String issueType() {
        return this.issueType;
    }
    public String os() {
        return this.os;
    }
    public String osVersion() {
        return this.osVersion;
    }
    public String permission() {
        return this.permission;
    }
    public String registryName() {
        return this.registryName;
    }
    public String resourceCpe() {
        return this.resourceCpe;
    }
    public String resourceFormat() {
        return this.resourceFormat;
    }
    public String resourceHash() {
        return this.resourceHash;
    }
    public String resourceName() {
        return this.resourceName;
    }
    public String resourcePath() {
        return this.resourcePath;
    }
    public String resourceType() {
        return this.resourceType;
    }
    public String resourceVersion() {
        return this.resourceVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAcknowledgesAcknowledge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String author;
        private String comment;
        private String date;
        private String dockerId;
        private String expirationConfiguredAt;
        private String expirationConfiguredBy;
        private Integer expirationDays;
        private String fixVersion;
        private String imageName;
        private String issueName;
        private String issueType;
        private String os;
        private String osVersion;
        private String permission;
        private String registryName;
        private String resourceCpe;
        private String resourceFormat;
        private String resourceHash;
        private String resourceName;
        private String resourcePath;
        private String resourceType;
        private String resourceVersion;
        public Builder() {}
        public Builder(GetAcknowledgesAcknowledge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.author = defaults.author;
    	      this.comment = defaults.comment;
    	      this.date = defaults.date;
    	      this.dockerId = defaults.dockerId;
    	      this.expirationConfiguredAt = defaults.expirationConfiguredAt;
    	      this.expirationConfiguredBy = defaults.expirationConfiguredBy;
    	      this.expirationDays = defaults.expirationDays;
    	      this.fixVersion = defaults.fixVersion;
    	      this.imageName = defaults.imageName;
    	      this.issueName = defaults.issueName;
    	      this.issueType = defaults.issueType;
    	      this.os = defaults.os;
    	      this.osVersion = defaults.osVersion;
    	      this.permission = defaults.permission;
    	      this.registryName = defaults.registryName;
    	      this.resourceCpe = defaults.resourceCpe;
    	      this.resourceFormat = defaults.resourceFormat;
    	      this.resourceHash = defaults.resourceHash;
    	      this.resourceName = defaults.resourceName;
    	      this.resourcePath = defaults.resourcePath;
    	      this.resourceType = defaults.resourceType;
    	      this.resourceVersion = defaults.resourceVersion;
        }

        @CustomType.Setter
        public Builder author(String author) {
            this.author = Objects.requireNonNull(author);
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        @CustomType.Setter
        public Builder date(String date) {
            this.date = Objects.requireNonNull(date);
            return this;
        }
        @CustomType.Setter
        public Builder dockerId(String dockerId) {
            this.dockerId = Objects.requireNonNull(dockerId);
            return this;
        }
        @CustomType.Setter
        public Builder expirationConfiguredAt(String expirationConfiguredAt) {
            this.expirationConfiguredAt = Objects.requireNonNull(expirationConfiguredAt);
            return this;
        }
        @CustomType.Setter
        public Builder expirationConfiguredBy(String expirationConfiguredBy) {
            this.expirationConfiguredBy = Objects.requireNonNull(expirationConfiguredBy);
            return this;
        }
        @CustomType.Setter
        public Builder expirationDays(Integer expirationDays) {
            this.expirationDays = Objects.requireNonNull(expirationDays);
            return this;
        }
        @CustomType.Setter
        public Builder fixVersion(String fixVersion) {
            this.fixVersion = Objects.requireNonNull(fixVersion);
            return this;
        }
        @CustomType.Setter
        public Builder imageName(String imageName) {
            this.imageName = Objects.requireNonNull(imageName);
            return this;
        }
        @CustomType.Setter
        public Builder issueName(String issueName) {
            this.issueName = Objects.requireNonNull(issueName);
            return this;
        }
        @CustomType.Setter
        public Builder issueType(String issueType) {
            this.issueType = Objects.requireNonNull(issueType);
            return this;
        }
        @CustomType.Setter
        public Builder os(String os) {
            this.os = Objects.requireNonNull(os);
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        @CustomType.Setter
        public Builder permission(String permission) {
            this.permission = Objects.requireNonNull(permission);
            return this;
        }
        @CustomType.Setter
        public Builder registryName(String registryName) {
            this.registryName = Objects.requireNonNull(registryName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceCpe(String resourceCpe) {
            this.resourceCpe = Objects.requireNonNull(resourceCpe);
            return this;
        }
        @CustomType.Setter
        public Builder resourceFormat(String resourceFormat) {
            this.resourceFormat = Objects.requireNonNull(resourceFormat);
            return this;
        }
        @CustomType.Setter
        public Builder resourceHash(String resourceHash) {
            this.resourceHash = Objects.requireNonNull(resourceHash);
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(String resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        @CustomType.Setter
        public Builder resourcePath(String resourcePath) {
            this.resourcePath = Objects.requireNonNull(resourcePath);
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        @CustomType.Setter
        public Builder resourceVersion(String resourceVersion) {
            this.resourceVersion = Objects.requireNonNull(resourceVersion);
            return this;
        }
        public GetAcknowledgesAcknowledge build() {
            final var o = new GetAcknowledgesAcknowledge();
            o.author = author;
            o.comment = comment;
            o.date = date;
            o.dockerId = dockerId;
            o.expirationConfiguredAt = expirationConfiguredAt;
            o.expirationConfiguredBy = expirationConfiguredBy;
            o.expirationDays = expirationDays;
            o.fixVersion = fixVersion;
            o.imageName = imageName;
            o.issueName = issueName;
            o.issueType = issueType;
            o.os = os;
            o.osVersion = osVersion;
            o.permission = permission;
            o.registryName = registryName;
            o.resourceCpe = resourceCpe;
            o.resourceFormat = resourceFormat;
            o.resourceHash = resourceHash;
            o.resourceName = resourceName;
            o.resourcePath = resourcePath;
            o.resourceType = resourceType;
            o.resourceVersion = resourceVersion;
            return o;
        }
    }
}
