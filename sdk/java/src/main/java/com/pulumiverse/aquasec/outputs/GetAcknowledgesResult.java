// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumiverse.aquasec.outputs.GetAcknowledgesAcknowledge;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAcknowledgesResult {
    /**
     * @return A list of existing security acknowledges.
     * 
     */
    private List<GetAcknowledgesAcknowledge> acknowledges;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetAcknowledgesResult() {}
    /**
     * @return A list of existing security acknowledges.
     * 
     */
    public List<GetAcknowledgesAcknowledge> acknowledges() {
        return this.acknowledges;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAcknowledgesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAcknowledgesAcknowledge> acknowledges;
        private String id;
        public Builder() {}
        public Builder(GetAcknowledgesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acknowledges = defaults.acknowledges;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder acknowledges(List<GetAcknowledgesAcknowledge> acknowledges) {
            this.acknowledges = Objects.requireNonNull(acknowledges);
            return this;
        }
        public Builder acknowledges(GetAcknowledgesAcknowledge... acknowledges) {
            return acknowledges(List.of(acknowledges));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetAcknowledgesResult build() {
            final var o = new GetAcknowledgesResult();
            o.acknowledges = acknowledges;
            o.id = id;
            return o;
        }
    }
}
