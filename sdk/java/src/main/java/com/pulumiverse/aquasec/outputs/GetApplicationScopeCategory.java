// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumiverse.aquasec.outputs.GetApplicationScopeCategoryArtifact;
import com.pulumiverse.aquasec.outputs.GetApplicationScopeCategoryEntityScope;
import com.pulumiverse.aquasec.outputs.GetApplicationScopeCategoryInfrastructure;
import com.pulumiverse.aquasec.outputs.GetApplicationScopeCategoryWorkload;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetApplicationScopeCategory {
    private @Nullable List<GetApplicationScopeCategoryArtifact> artifacts;
    private @Nullable List<GetApplicationScopeCategoryEntityScope> entityScopes;
    private @Nullable List<GetApplicationScopeCategoryInfrastructure> infrastructures;
    private @Nullable List<GetApplicationScopeCategoryWorkload> workloads;

    private GetApplicationScopeCategory() {}
    public List<GetApplicationScopeCategoryArtifact> artifacts() {
        return this.artifacts == null ? List.of() : this.artifacts;
    }
    public List<GetApplicationScopeCategoryEntityScope> entityScopes() {
        return this.entityScopes == null ? List.of() : this.entityScopes;
    }
    public List<GetApplicationScopeCategoryInfrastructure> infrastructures() {
        return this.infrastructures == null ? List.of() : this.infrastructures;
    }
    public List<GetApplicationScopeCategoryWorkload> workloads() {
        return this.workloads == null ? List.of() : this.workloads;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationScopeCategory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetApplicationScopeCategoryArtifact> artifacts;
        private @Nullable List<GetApplicationScopeCategoryEntityScope> entityScopes;
        private @Nullable List<GetApplicationScopeCategoryInfrastructure> infrastructures;
        private @Nullable List<GetApplicationScopeCategoryWorkload> workloads;
        public Builder() {}
        public Builder(GetApplicationScopeCategory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifacts = defaults.artifacts;
    	      this.entityScopes = defaults.entityScopes;
    	      this.infrastructures = defaults.infrastructures;
    	      this.workloads = defaults.workloads;
        }

        @CustomType.Setter
        public Builder artifacts(@Nullable List<GetApplicationScopeCategoryArtifact> artifacts) {
            this.artifacts = artifacts;
            return this;
        }
        public Builder artifacts(GetApplicationScopeCategoryArtifact... artifacts) {
            return artifacts(List.of(artifacts));
        }
        @CustomType.Setter
        public Builder entityScopes(@Nullable List<GetApplicationScopeCategoryEntityScope> entityScopes) {
            this.entityScopes = entityScopes;
            return this;
        }
        public Builder entityScopes(GetApplicationScopeCategoryEntityScope... entityScopes) {
            return entityScopes(List.of(entityScopes));
        }
        @CustomType.Setter
        public Builder infrastructures(@Nullable List<GetApplicationScopeCategoryInfrastructure> infrastructures) {
            this.infrastructures = infrastructures;
            return this;
        }
        public Builder infrastructures(GetApplicationScopeCategoryInfrastructure... infrastructures) {
            return infrastructures(List.of(infrastructures));
        }
        @CustomType.Setter
        public Builder workloads(@Nullable List<GetApplicationScopeCategoryWorkload> workloads) {
            this.workloads = workloads;
            return this;
        }
        public Builder workloads(GetApplicationScopeCategoryWorkload... workloads) {
            return workloads(List.of(workloads));
        }
        public GetApplicationScopeCategory build() {
            final var o = new GetApplicationScopeCategory();
            o.artifacts = artifacts;
            o.entityScopes = entityScopes;
            o.infrastructures = infrastructures;
            o.workloads = workloads;
            return o;
        }
    }
}
