// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumiverse.aquasec.outputs.GetGatewaysGateway;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGatewaysResult {
    /**
     * @return A list of existing gateways&#39; parameters.
     * 
     */
    private final List<GetGatewaysGateway> gateways;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetGatewaysResult(
        @CustomType.Parameter("gateways") List<GetGatewaysGateway> gateways,
        @CustomType.Parameter("id") String id) {
        this.gateways = gateways;
        this.id = id;
    }

    /**
     * @return A list of existing gateways&#39; parameters.
     * 
     */
    public List<GetGatewaysGateway> gateways() {
        return this.gateways;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewaysResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetGatewaysGateway> gateways;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGatewaysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gateways = defaults.gateways;
    	      this.id = defaults.id;
        }

        public Builder gateways(List<GetGatewaysGateway> gateways) {
            this.gateways = Objects.requireNonNull(gateways);
            return this;
        }
        public Builder gateways(GetGatewaysGateway... gateways) {
            return gateways(List.of(gateways));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetGatewaysResult build() {
            return new GetGatewaysResult(gateways, id);
        }
    }
}
