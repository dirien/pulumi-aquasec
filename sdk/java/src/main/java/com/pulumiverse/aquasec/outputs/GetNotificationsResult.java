// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumiverse.aquasec.outputs.GetNotificationsEmail;
import com.pulumiverse.aquasec.outputs.GetNotificationsJira;
import com.pulumiverse.aquasec.outputs.GetNotificationsServicenow;
import com.pulumiverse.aquasec.outputs.GetNotificationsSlack;
import com.pulumiverse.aquasec.outputs.GetNotificationsSplunk;
import com.pulumiverse.aquasec.outputs.GetNotificationsTeam;
import com.pulumiverse.aquasec.outputs.GetNotificationsWebhook;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNotificationsResult {
    private List<GetNotificationsEmail> emails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetNotificationsJira> jiras;
    private List<GetNotificationsServicenow> servicenows;
    private List<GetNotificationsSlack> slacks;
    private List<GetNotificationsSplunk> splunks;
    private List<GetNotificationsTeam> teams;
    private List<GetNotificationsWebhook> webhooks;

    private GetNotificationsResult() {}
    public List<GetNotificationsEmail> emails() {
        return this.emails;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetNotificationsJira> jiras() {
        return this.jiras;
    }
    public List<GetNotificationsServicenow> servicenows() {
        return this.servicenows;
    }
    public List<GetNotificationsSlack> slacks() {
        return this.slacks;
    }
    public List<GetNotificationsSplunk> splunks() {
        return this.splunks;
    }
    public List<GetNotificationsTeam> teams() {
        return this.teams;
    }
    public List<GetNotificationsWebhook> webhooks() {
        return this.webhooks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNotificationsEmail> emails;
        private String id;
        private List<GetNotificationsJira> jiras;
        private List<GetNotificationsServicenow> servicenows;
        private List<GetNotificationsSlack> slacks;
        private List<GetNotificationsSplunk> splunks;
        private List<GetNotificationsTeam> teams;
        private List<GetNotificationsWebhook> webhooks;
        public Builder() {}
        public Builder(GetNotificationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emails = defaults.emails;
    	      this.id = defaults.id;
    	      this.jiras = defaults.jiras;
    	      this.servicenows = defaults.servicenows;
    	      this.slacks = defaults.slacks;
    	      this.splunks = defaults.splunks;
    	      this.teams = defaults.teams;
    	      this.webhooks = defaults.webhooks;
        }

        @CustomType.Setter
        public Builder emails(List<GetNotificationsEmail> emails) {
            this.emails = Objects.requireNonNull(emails);
            return this;
        }
        public Builder emails(GetNotificationsEmail... emails) {
            return emails(List.of(emails));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder jiras(List<GetNotificationsJira> jiras) {
            this.jiras = Objects.requireNonNull(jiras);
            return this;
        }
        public Builder jiras(GetNotificationsJira... jiras) {
            return jiras(List.of(jiras));
        }
        @CustomType.Setter
        public Builder servicenows(List<GetNotificationsServicenow> servicenows) {
            this.servicenows = Objects.requireNonNull(servicenows);
            return this;
        }
        public Builder servicenows(GetNotificationsServicenow... servicenows) {
            return servicenows(List.of(servicenows));
        }
        @CustomType.Setter
        public Builder slacks(List<GetNotificationsSlack> slacks) {
            this.slacks = Objects.requireNonNull(slacks);
            return this;
        }
        public Builder slacks(GetNotificationsSlack... slacks) {
            return slacks(List.of(slacks));
        }
        @CustomType.Setter
        public Builder splunks(List<GetNotificationsSplunk> splunks) {
            this.splunks = Objects.requireNonNull(splunks);
            return this;
        }
        public Builder splunks(GetNotificationsSplunk... splunks) {
            return splunks(List.of(splunks));
        }
        @CustomType.Setter
        public Builder teams(List<GetNotificationsTeam> teams) {
            this.teams = Objects.requireNonNull(teams);
            return this;
        }
        public Builder teams(GetNotificationsTeam... teams) {
            return teams(List.of(teams));
        }
        @CustomType.Setter
        public Builder webhooks(List<GetNotificationsWebhook> webhooks) {
            this.webhooks = Objects.requireNonNull(webhooks);
            return this;
        }
        public Builder webhooks(GetNotificationsWebhook... webhooks) {
            return webhooks(List.of(webhooks));
        }
        public GetNotificationsResult build() {
            final var o = new GetNotificationsResult();
            o.emails = emails;
            o.id = id;
            o.jiras = jiras;
            o.servicenows = servicenows;
            o.slacks = slacks;
            o.splunks = splunks;
            o.teams = teams;
            o.webhooks = webhooks;
            return o;
        }
    }
}
