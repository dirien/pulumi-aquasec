// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUsersUser {
    private final String email;
    private final Boolean firstTime;
    private final Boolean isSuper;
    private final String name;
    private final String plan;
    private final String role;
    private final List<String> roles;
    private final String type;
    private final Boolean uiAccess;
    private final String userId;

    @CustomType.Constructor
    private GetUsersUser(
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("firstTime") Boolean firstTime,
        @CustomType.Parameter("isSuper") Boolean isSuper,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("plan") String plan,
        @CustomType.Parameter("role") String role,
        @CustomType.Parameter("roles") List<String> roles,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uiAccess") Boolean uiAccess,
        @CustomType.Parameter("userId") String userId) {
        this.email = email;
        this.firstTime = firstTime;
        this.isSuper = isSuper;
        this.name = name;
        this.plan = plan;
        this.role = role;
        this.roles = roles;
        this.type = type;
        this.uiAccess = uiAccess;
        this.userId = userId;
    }

    public String email() {
        return this.email;
    }
    public Boolean firstTime() {
        return this.firstTime;
    }
    public Boolean isSuper() {
        return this.isSuper;
    }
    public String name() {
        return this.name;
    }
    public String plan() {
        return this.plan;
    }
    public String role() {
        return this.role;
    }
    public List<String> roles() {
        return this.roles;
    }
    public String type() {
        return this.type;
    }
    public Boolean uiAccess() {
        return this.uiAccess;
    }
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersUser defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String email;
        private Boolean firstTime;
        private Boolean isSuper;
        private String name;
        private String plan;
        private String role;
        private List<String> roles;
        private String type;
        private Boolean uiAccess;
        private String userId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.firstTime = defaults.firstTime;
    	      this.isSuper = defaults.isSuper;
    	      this.name = defaults.name;
    	      this.plan = defaults.plan;
    	      this.role = defaults.role;
    	      this.roles = defaults.roles;
    	      this.type = defaults.type;
    	      this.uiAccess = defaults.uiAccess;
    	      this.userId = defaults.userId;
        }

        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder firstTime(Boolean firstTime) {
            this.firstTime = Objects.requireNonNull(firstTime);
            return this;
        }
        public Builder isSuper(Boolean isSuper) {
            this.isSuper = Objects.requireNonNull(isSuper);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder plan(String plan) {
            this.plan = Objects.requireNonNull(plan);
            return this;
        }
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        public Builder roles(List<String> roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uiAccess(Boolean uiAccess) {
            this.uiAccess = Objects.requireNonNull(uiAccess);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }        public GetUsersUser build() {
            return new GetUsersUser(email, firstTime, isSuper, name, plan, role, roles, type, uiAccess, userId);
        }
    }
}
