// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.aquasec.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImageVulnerability {
    private @Nullable String ackAuthor;
    private @Nullable String ackComment;
    private @Nullable String ackExpirationConfiguredAt;
    private @Nullable String ackExpirationConfiguredBy;
    private @Nullable Integer ackExpirationDays;
    private @Nullable String ackScope;
    private @Nullable String acknowledgeDate;
    private @Nullable String ancestorPkg;
    private @Nullable Double aquaScore;
    private @Nullable String aquaScoreClassification;
    private @Nullable String aquaScoringSystem;
    private @Nullable String aquaSeverity;
    private @Nullable String aquaSeverityClassification;
    private @Nullable String aquaVectors;
    private @Nullable Integer auditEventsCount;
    private @Nullable Integer blockEventsCount;
    private @Nullable String classification;
    private @Nullable String description;
    /**
     * @return The content digest of the image.
     * 
     */
    private @Nullable String digest;
    private @Nullable String exploitReference;
    private @Nullable String exploitType;
    private @Nullable String firstFoundDate;
    private @Nullable String fixVersion;
    private @Nullable String imageName;
    private @Nullable String lastFoundDate;
    private @Nullable String modificationDate;
    /**
     * @return The name of the image.
     * 
     */
    private @Nullable String name;
    private @Nullable Double nvdCvss2Score;
    private @Nullable String nvdCvss2Vectors;
    private @Nullable Double nvdCvss3Score;
    private @Nullable String nvdCvss3Severity;
    private @Nullable String nvdCvss3Vectors;
    private @Nullable String nvdSeverity;
    private @Nullable String nvdUrl;
    /**
     * @return The operating system detected in the image
     * 
     */
    private @Nullable String os;
    /**
     * @return The version of the OS detected in the image.
     * 
     */
    private @Nullable String osVersion;
    /**
     * @return Permission of the image.
     * 
     */
    private @Nullable String permission;
    private @Nullable String publishDate;
    /**
     * @return The name of the registry where the image is stored.
     * 
     */
    private @Nullable String registry;
    /**
     * @return The name of the image&#39;s repository.
     * 
     */
    private @Nullable String repository;
    private @Nullable String resourceArchitecture;
    private @Nullable String resourceCpe;
    private @Nullable String resourceFormat;
    private @Nullable String resourceHash;
    private @Nullable List<String> resourceLicenses;
    private @Nullable String resourceName;
    private @Nullable String resourcePath;
    private @Nullable String resourceType;
    private @Nullable String resourceVersion;
    private @Nullable String severityClassification;
    private @Nullable String solution;
    private @Nullable String temporalVector;
    private @Nullable String vPatchAppliedBy;
    private @Nullable String vPatchAppliedOn;
    private @Nullable String vPatchEnforcedBy;
    private @Nullable String vPatchEnforcedOn;
    private @Nullable Boolean vPatchPolicyEnforce;
    private @Nullable String vPatchPolicyName;
    private @Nullable String vPatchRevertedBy;
    private @Nullable String vPatchRevertedOn;
    private @Nullable String vPatchStatus;
    private @Nullable Double vendorCvss2Score;
    private @Nullable String vendorCvss2Vectors;
    private @Nullable String vendorSeverity;
    private @Nullable String vendorStatement;
    private @Nullable String vendorUrl;

    private ImageVulnerability() {}
    public Optional<String> ackAuthor() {
        return Optional.ofNullable(this.ackAuthor);
    }
    public Optional<String> ackComment() {
        return Optional.ofNullable(this.ackComment);
    }
    public Optional<String> ackExpirationConfiguredAt() {
        return Optional.ofNullable(this.ackExpirationConfiguredAt);
    }
    public Optional<String> ackExpirationConfiguredBy() {
        return Optional.ofNullable(this.ackExpirationConfiguredBy);
    }
    public Optional<Integer> ackExpirationDays() {
        return Optional.ofNullable(this.ackExpirationDays);
    }
    public Optional<String> ackScope() {
        return Optional.ofNullable(this.ackScope);
    }
    public Optional<String> acknowledgeDate() {
        return Optional.ofNullable(this.acknowledgeDate);
    }
    public Optional<String> ancestorPkg() {
        return Optional.ofNullable(this.ancestorPkg);
    }
    public Optional<Double> aquaScore() {
        return Optional.ofNullable(this.aquaScore);
    }
    public Optional<String> aquaScoreClassification() {
        return Optional.ofNullable(this.aquaScoreClassification);
    }
    public Optional<String> aquaScoringSystem() {
        return Optional.ofNullable(this.aquaScoringSystem);
    }
    public Optional<String> aquaSeverity() {
        return Optional.ofNullable(this.aquaSeverity);
    }
    public Optional<String> aquaSeverityClassification() {
        return Optional.ofNullable(this.aquaSeverityClassification);
    }
    public Optional<String> aquaVectors() {
        return Optional.ofNullable(this.aquaVectors);
    }
    public Optional<Integer> auditEventsCount() {
        return Optional.ofNullable(this.auditEventsCount);
    }
    public Optional<Integer> blockEventsCount() {
        return Optional.ofNullable(this.blockEventsCount);
    }
    public Optional<String> classification() {
        return Optional.ofNullable(this.classification);
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The content digest of the image.
     * 
     */
    public Optional<String> digest() {
        return Optional.ofNullable(this.digest);
    }
    public Optional<String> exploitReference() {
        return Optional.ofNullable(this.exploitReference);
    }
    public Optional<String> exploitType() {
        return Optional.ofNullable(this.exploitType);
    }
    public Optional<String> firstFoundDate() {
        return Optional.ofNullable(this.firstFoundDate);
    }
    public Optional<String> fixVersion() {
        return Optional.ofNullable(this.fixVersion);
    }
    public Optional<String> imageName() {
        return Optional.ofNullable(this.imageName);
    }
    public Optional<String> lastFoundDate() {
        return Optional.ofNullable(this.lastFoundDate);
    }
    public Optional<String> modificationDate() {
        return Optional.ofNullable(this.modificationDate);
    }
    /**
     * @return The name of the image.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Double> nvdCvss2Score() {
        return Optional.ofNullable(this.nvdCvss2Score);
    }
    public Optional<String> nvdCvss2Vectors() {
        return Optional.ofNullable(this.nvdCvss2Vectors);
    }
    public Optional<Double> nvdCvss3Score() {
        return Optional.ofNullable(this.nvdCvss3Score);
    }
    public Optional<String> nvdCvss3Severity() {
        return Optional.ofNullable(this.nvdCvss3Severity);
    }
    public Optional<String> nvdCvss3Vectors() {
        return Optional.ofNullable(this.nvdCvss3Vectors);
    }
    public Optional<String> nvdSeverity() {
        return Optional.ofNullable(this.nvdSeverity);
    }
    public Optional<String> nvdUrl() {
        return Optional.ofNullable(this.nvdUrl);
    }
    /**
     * @return The operating system detected in the image
     * 
     */
    public Optional<String> os() {
        return Optional.ofNullable(this.os);
    }
    /**
     * @return The version of the OS detected in the image.
     * 
     */
    public Optional<String> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * @return Permission of the image.
     * 
     */
    public Optional<String> permission() {
        return Optional.ofNullable(this.permission);
    }
    public Optional<String> publishDate() {
        return Optional.ofNullable(this.publishDate);
    }
    /**
     * @return The name of the registry where the image is stored.
     * 
     */
    public Optional<String> registry() {
        return Optional.ofNullable(this.registry);
    }
    /**
     * @return The name of the image&#39;s repository.
     * 
     */
    public Optional<String> repository() {
        return Optional.ofNullable(this.repository);
    }
    public Optional<String> resourceArchitecture() {
        return Optional.ofNullable(this.resourceArchitecture);
    }
    public Optional<String> resourceCpe() {
        return Optional.ofNullable(this.resourceCpe);
    }
    public Optional<String> resourceFormat() {
        return Optional.ofNullable(this.resourceFormat);
    }
    public Optional<String> resourceHash() {
        return Optional.ofNullable(this.resourceHash);
    }
    public List<String> resourceLicenses() {
        return this.resourceLicenses == null ? List.of() : this.resourceLicenses;
    }
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    public Optional<String> resourcePath() {
        return Optional.ofNullable(this.resourcePath);
    }
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    public Optional<String> resourceVersion() {
        return Optional.ofNullable(this.resourceVersion);
    }
    public Optional<String> severityClassification() {
        return Optional.ofNullable(this.severityClassification);
    }
    public Optional<String> solution() {
        return Optional.ofNullable(this.solution);
    }
    public Optional<String> temporalVector() {
        return Optional.ofNullable(this.temporalVector);
    }
    public Optional<String> vPatchAppliedBy() {
        return Optional.ofNullable(this.vPatchAppliedBy);
    }
    public Optional<String> vPatchAppliedOn() {
        return Optional.ofNullable(this.vPatchAppliedOn);
    }
    public Optional<String> vPatchEnforcedBy() {
        return Optional.ofNullable(this.vPatchEnforcedBy);
    }
    public Optional<String> vPatchEnforcedOn() {
        return Optional.ofNullable(this.vPatchEnforcedOn);
    }
    public Optional<Boolean> vPatchPolicyEnforce() {
        return Optional.ofNullable(this.vPatchPolicyEnforce);
    }
    public Optional<String> vPatchPolicyName() {
        return Optional.ofNullable(this.vPatchPolicyName);
    }
    public Optional<String> vPatchRevertedBy() {
        return Optional.ofNullable(this.vPatchRevertedBy);
    }
    public Optional<String> vPatchRevertedOn() {
        return Optional.ofNullable(this.vPatchRevertedOn);
    }
    public Optional<String> vPatchStatus() {
        return Optional.ofNullable(this.vPatchStatus);
    }
    public Optional<Double> vendorCvss2Score() {
        return Optional.ofNullable(this.vendorCvss2Score);
    }
    public Optional<String> vendorCvss2Vectors() {
        return Optional.ofNullable(this.vendorCvss2Vectors);
    }
    public Optional<String> vendorSeverity() {
        return Optional.ofNullable(this.vendorSeverity);
    }
    public Optional<String> vendorStatement() {
        return Optional.ofNullable(this.vendorStatement);
    }
    public Optional<String> vendorUrl() {
        return Optional.ofNullable(this.vendorUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageVulnerability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ackAuthor;
        private @Nullable String ackComment;
        private @Nullable String ackExpirationConfiguredAt;
        private @Nullable String ackExpirationConfiguredBy;
        private @Nullable Integer ackExpirationDays;
        private @Nullable String ackScope;
        private @Nullable String acknowledgeDate;
        private @Nullable String ancestorPkg;
        private @Nullable Double aquaScore;
        private @Nullable String aquaScoreClassification;
        private @Nullable String aquaScoringSystem;
        private @Nullable String aquaSeverity;
        private @Nullable String aquaSeverityClassification;
        private @Nullable String aquaVectors;
        private @Nullable Integer auditEventsCount;
        private @Nullable Integer blockEventsCount;
        private @Nullable String classification;
        private @Nullable String description;
        private @Nullable String digest;
        private @Nullable String exploitReference;
        private @Nullable String exploitType;
        private @Nullable String firstFoundDate;
        private @Nullable String fixVersion;
        private @Nullable String imageName;
        private @Nullable String lastFoundDate;
        private @Nullable String modificationDate;
        private @Nullable String name;
        private @Nullable Double nvdCvss2Score;
        private @Nullable String nvdCvss2Vectors;
        private @Nullable Double nvdCvss3Score;
        private @Nullable String nvdCvss3Severity;
        private @Nullable String nvdCvss3Vectors;
        private @Nullable String nvdSeverity;
        private @Nullable String nvdUrl;
        private @Nullable String os;
        private @Nullable String osVersion;
        private @Nullable String permission;
        private @Nullable String publishDate;
        private @Nullable String registry;
        private @Nullable String repository;
        private @Nullable String resourceArchitecture;
        private @Nullable String resourceCpe;
        private @Nullable String resourceFormat;
        private @Nullable String resourceHash;
        private @Nullable List<String> resourceLicenses;
        private @Nullable String resourceName;
        private @Nullable String resourcePath;
        private @Nullable String resourceType;
        private @Nullable String resourceVersion;
        private @Nullable String severityClassification;
        private @Nullable String solution;
        private @Nullable String temporalVector;
        private @Nullable String vPatchAppliedBy;
        private @Nullable String vPatchAppliedOn;
        private @Nullable String vPatchEnforcedBy;
        private @Nullable String vPatchEnforcedOn;
        private @Nullable Boolean vPatchPolicyEnforce;
        private @Nullable String vPatchPolicyName;
        private @Nullable String vPatchRevertedBy;
        private @Nullable String vPatchRevertedOn;
        private @Nullable String vPatchStatus;
        private @Nullable Double vendorCvss2Score;
        private @Nullable String vendorCvss2Vectors;
        private @Nullable String vendorSeverity;
        private @Nullable String vendorStatement;
        private @Nullable String vendorUrl;
        public Builder() {}
        public Builder(ImageVulnerability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ackAuthor = defaults.ackAuthor;
    	      this.ackComment = defaults.ackComment;
    	      this.ackExpirationConfiguredAt = defaults.ackExpirationConfiguredAt;
    	      this.ackExpirationConfiguredBy = defaults.ackExpirationConfiguredBy;
    	      this.ackExpirationDays = defaults.ackExpirationDays;
    	      this.ackScope = defaults.ackScope;
    	      this.acknowledgeDate = defaults.acknowledgeDate;
    	      this.ancestorPkg = defaults.ancestorPkg;
    	      this.aquaScore = defaults.aquaScore;
    	      this.aquaScoreClassification = defaults.aquaScoreClassification;
    	      this.aquaScoringSystem = defaults.aquaScoringSystem;
    	      this.aquaSeverity = defaults.aquaSeverity;
    	      this.aquaSeverityClassification = defaults.aquaSeverityClassification;
    	      this.aquaVectors = defaults.aquaVectors;
    	      this.auditEventsCount = defaults.auditEventsCount;
    	      this.blockEventsCount = defaults.blockEventsCount;
    	      this.classification = defaults.classification;
    	      this.description = defaults.description;
    	      this.digest = defaults.digest;
    	      this.exploitReference = defaults.exploitReference;
    	      this.exploitType = defaults.exploitType;
    	      this.firstFoundDate = defaults.firstFoundDate;
    	      this.fixVersion = defaults.fixVersion;
    	      this.imageName = defaults.imageName;
    	      this.lastFoundDate = defaults.lastFoundDate;
    	      this.modificationDate = defaults.modificationDate;
    	      this.name = defaults.name;
    	      this.nvdCvss2Score = defaults.nvdCvss2Score;
    	      this.nvdCvss2Vectors = defaults.nvdCvss2Vectors;
    	      this.nvdCvss3Score = defaults.nvdCvss3Score;
    	      this.nvdCvss3Severity = defaults.nvdCvss3Severity;
    	      this.nvdCvss3Vectors = defaults.nvdCvss3Vectors;
    	      this.nvdSeverity = defaults.nvdSeverity;
    	      this.nvdUrl = defaults.nvdUrl;
    	      this.os = defaults.os;
    	      this.osVersion = defaults.osVersion;
    	      this.permission = defaults.permission;
    	      this.publishDate = defaults.publishDate;
    	      this.registry = defaults.registry;
    	      this.repository = defaults.repository;
    	      this.resourceArchitecture = defaults.resourceArchitecture;
    	      this.resourceCpe = defaults.resourceCpe;
    	      this.resourceFormat = defaults.resourceFormat;
    	      this.resourceHash = defaults.resourceHash;
    	      this.resourceLicenses = defaults.resourceLicenses;
    	      this.resourceName = defaults.resourceName;
    	      this.resourcePath = defaults.resourcePath;
    	      this.resourceType = defaults.resourceType;
    	      this.resourceVersion = defaults.resourceVersion;
    	      this.severityClassification = defaults.severityClassification;
    	      this.solution = defaults.solution;
    	      this.temporalVector = defaults.temporalVector;
    	      this.vPatchAppliedBy = defaults.vPatchAppliedBy;
    	      this.vPatchAppliedOn = defaults.vPatchAppliedOn;
    	      this.vPatchEnforcedBy = defaults.vPatchEnforcedBy;
    	      this.vPatchEnforcedOn = defaults.vPatchEnforcedOn;
    	      this.vPatchPolicyEnforce = defaults.vPatchPolicyEnforce;
    	      this.vPatchPolicyName = defaults.vPatchPolicyName;
    	      this.vPatchRevertedBy = defaults.vPatchRevertedBy;
    	      this.vPatchRevertedOn = defaults.vPatchRevertedOn;
    	      this.vPatchStatus = defaults.vPatchStatus;
    	      this.vendorCvss2Score = defaults.vendorCvss2Score;
    	      this.vendorCvss2Vectors = defaults.vendorCvss2Vectors;
    	      this.vendorSeverity = defaults.vendorSeverity;
    	      this.vendorStatement = defaults.vendorStatement;
    	      this.vendorUrl = defaults.vendorUrl;
        }

        @CustomType.Setter
        public Builder ackAuthor(@Nullable String ackAuthor) {
            this.ackAuthor = ackAuthor;
            return this;
        }
        @CustomType.Setter
        public Builder ackComment(@Nullable String ackComment) {
            this.ackComment = ackComment;
            return this;
        }
        @CustomType.Setter
        public Builder ackExpirationConfiguredAt(@Nullable String ackExpirationConfiguredAt) {
            this.ackExpirationConfiguredAt = ackExpirationConfiguredAt;
            return this;
        }
        @CustomType.Setter
        public Builder ackExpirationConfiguredBy(@Nullable String ackExpirationConfiguredBy) {
            this.ackExpirationConfiguredBy = ackExpirationConfiguredBy;
            return this;
        }
        @CustomType.Setter
        public Builder ackExpirationDays(@Nullable Integer ackExpirationDays) {
            this.ackExpirationDays = ackExpirationDays;
            return this;
        }
        @CustomType.Setter
        public Builder ackScope(@Nullable String ackScope) {
            this.ackScope = ackScope;
            return this;
        }
        @CustomType.Setter
        public Builder acknowledgeDate(@Nullable String acknowledgeDate) {
            this.acknowledgeDate = acknowledgeDate;
            return this;
        }
        @CustomType.Setter
        public Builder ancestorPkg(@Nullable String ancestorPkg) {
            this.ancestorPkg = ancestorPkg;
            return this;
        }
        @CustomType.Setter
        public Builder aquaScore(@Nullable Double aquaScore) {
            this.aquaScore = aquaScore;
            return this;
        }
        @CustomType.Setter
        public Builder aquaScoreClassification(@Nullable String aquaScoreClassification) {
            this.aquaScoreClassification = aquaScoreClassification;
            return this;
        }
        @CustomType.Setter
        public Builder aquaScoringSystem(@Nullable String aquaScoringSystem) {
            this.aquaScoringSystem = aquaScoringSystem;
            return this;
        }
        @CustomType.Setter
        public Builder aquaSeverity(@Nullable String aquaSeverity) {
            this.aquaSeverity = aquaSeverity;
            return this;
        }
        @CustomType.Setter
        public Builder aquaSeverityClassification(@Nullable String aquaSeverityClassification) {
            this.aquaSeverityClassification = aquaSeverityClassification;
            return this;
        }
        @CustomType.Setter
        public Builder aquaVectors(@Nullable String aquaVectors) {
            this.aquaVectors = aquaVectors;
            return this;
        }
        @CustomType.Setter
        public Builder auditEventsCount(@Nullable Integer auditEventsCount) {
            this.auditEventsCount = auditEventsCount;
            return this;
        }
        @CustomType.Setter
        public Builder blockEventsCount(@Nullable Integer blockEventsCount) {
            this.blockEventsCount = blockEventsCount;
            return this;
        }
        @CustomType.Setter
        public Builder classification(@Nullable String classification) {
            this.classification = classification;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder digest(@Nullable String digest) {
            this.digest = digest;
            return this;
        }
        @CustomType.Setter
        public Builder exploitReference(@Nullable String exploitReference) {
            this.exploitReference = exploitReference;
            return this;
        }
        @CustomType.Setter
        public Builder exploitType(@Nullable String exploitType) {
            this.exploitType = exploitType;
            return this;
        }
        @CustomType.Setter
        public Builder firstFoundDate(@Nullable String firstFoundDate) {
            this.firstFoundDate = firstFoundDate;
            return this;
        }
        @CustomType.Setter
        public Builder fixVersion(@Nullable String fixVersion) {
            this.fixVersion = fixVersion;
            return this;
        }
        @CustomType.Setter
        public Builder imageName(@Nullable String imageName) {
            this.imageName = imageName;
            return this;
        }
        @CustomType.Setter
        public Builder lastFoundDate(@Nullable String lastFoundDate) {
            this.lastFoundDate = lastFoundDate;
            return this;
        }
        @CustomType.Setter
        public Builder modificationDate(@Nullable String modificationDate) {
            this.modificationDate = modificationDate;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nvdCvss2Score(@Nullable Double nvdCvss2Score) {
            this.nvdCvss2Score = nvdCvss2Score;
            return this;
        }
        @CustomType.Setter
        public Builder nvdCvss2Vectors(@Nullable String nvdCvss2Vectors) {
            this.nvdCvss2Vectors = nvdCvss2Vectors;
            return this;
        }
        @CustomType.Setter
        public Builder nvdCvss3Score(@Nullable Double nvdCvss3Score) {
            this.nvdCvss3Score = nvdCvss3Score;
            return this;
        }
        @CustomType.Setter
        public Builder nvdCvss3Severity(@Nullable String nvdCvss3Severity) {
            this.nvdCvss3Severity = nvdCvss3Severity;
            return this;
        }
        @CustomType.Setter
        public Builder nvdCvss3Vectors(@Nullable String nvdCvss3Vectors) {
            this.nvdCvss3Vectors = nvdCvss3Vectors;
            return this;
        }
        @CustomType.Setter
        public Builder nvdSeverity(@Nullable String nvdSeverity) {
            this.nvdSeverity = nvdSeverity;
            return this;
        }
        @CustomType.Setter
        public Builder nvdUrl(@Nullable String nvdUrl) {
            this.nvdUrl = nvdUrl;
            return this;
        }
        @CustomType.Setter
        public Builder os(@Nullable String os) {
            this.os = os;
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        @CustomType.Setter
        public Builder permission(@Nullable String permission) {
            this.permission = permission;
            return this;
        }
        @CustomType.Setter
        public Builder publishDate(@Nullable String publishDate) {
            this.publishDate = publishDate;
            return this;
        }
        @CustomType.Setter
        public Builder registry(@Nullable String registry) {
            this.registry = registry;
            return this;
        }
        @CustomType.Setter
        public Builder repository(@Nullable String repository) {
            this.repository = repository;
            return this;
        }
        @CustomType.Setter
        public Builder resourceArchitecture(@Nullable String resourceArchitecture) {
            this.resourceArchitecture = resourceArchitecture;
            return this;
        }
        @CustomType.Setter
        public Builder resourceCpe(@Nullable String resourceCpe) {
            this.resourceCpe = resourceCpe;
            return this;
        }
        @CustomType.Setter
        public Builder resourceFormat(@Nullable String resourceFormat) {
            this.resourceFormat = resourceFormat;
            return this;
        }
        @CustomType.Setter
        public Builder resourceHash(@Nullable String resourceHash) {
            this.resourceHash = resourceHash;
            return this;
        }
        @CustomType.Setter
        public Builder resourceLicenses(@Nullable List<String> resourceLicenses) {
            this.resourceLicenses = resourceLicenses;
            return this;
        }
        public Builder resourceLicenses(String... resourceLicenses) {
            return resourceLicenses(List.of(resourceLicenses));
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourcePath(@Nullable String resourcePath) {
            this.resourcePath = resourcePath;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceVersion(@Nullable String resourceVersion) {
            this.resourceVersion = resourceVersion;
            return this;
        }
        @CustomType.Setter
        public Builder severityClassification(@Nullable String severityClassification) {
            this.severityClassification = severityClassification;
            return this;
        }
        @CustomType.Setter
        public Builder solution(@Nullable String solution) {
            this.solution = solution;
            return this;
        }
        @CustomType.Setter
        public Builder temporalVector(@Nullable String temporalVector) {
            this.temporalVector = temporalVector;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchAppliedBy(@Nullable String vPatchAppliedBy) {
            this.vPatchAppliedBy = vPatchAppliedBy;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchAppliedOn(@Nullable String vPatchAppliedOn) {
            this.vPatchAppliedOn = vPatchAppliedOn;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchEnforcedBy(@Nullable String vPatchEnforcedBy) {
            this.vPatchEnforcedBy = vPatchEnforcedBy;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchEnforcedOn(@Nullable String vPatchEnforcedOn) {
            this.vPatchEnforcedOn = vPatchEnforcedOn;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchPolicyEnforce(@Nullable Boolean vPatchPolicyEnforce) {
            this.vPatchPolicyEnforce = vPatchPolicyEnforce;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchPolicyName(@Nullable String vPatchPolicyName) {
            this.vPatchPolicyName = vPatchPolicyName;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchRevertedBy(@Nullable String vPatchRevertedBy) {
            this.vPatchRevertedBy = vPatchRevertedBy;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchRevertedOn(@Nullable String vPatchRevertedOn) {
            this.vPatchRevertedOn = vPatchRevertedOn;
            return this;
        }
        @CustomType.Setter
        public Builder vPatchStatus(@Nullable String vPatchStatus) {
            this.vPatchStatus = vPatchStatus;
            return this;
        }
        @CustomType.Setter
        public Builder vendorCvss2Score(@Nullable Double vendorCvss2Score) {
            this.vendorCvss2Score = vendorCvss2Score;
            return this;
        }
        @CustomType.Setter
        public Builder vendorCvss2Vectors(@Nullable String vendorCvss2Vectors) {
            this.vendorCvss2Vectors = vendorCvss2Vectors;
            return this;
        }
        @CustomType.Setter
        public Builder vendorSeverity(@Nullable String vendorSeverity) {
            this.vendorSeverity = vendorSeverity;
            return this;
        }
        @CustomType.Setter
        public Builder vendorStatement(@Nullable String vendorStatement) {
            this.vendorStatement = vendorStatement;
            return this;
        }
        @CustomType.Setter
        public Builder vendorUrl(@Nullable String vendorUrl) {
            this.vendorUrl = vendorUrl;
            return this;
        }
        public ImageVulnerability build() {
            final var o = new ImageVulnerability();
            o.ackAuthor = ackAuthor;
            o.ackComment = ackComment;
            o.ackExpirationConfiguredAt = ackExpirationConfiguredAt;
            o.ackExpirationConfiguredBy = ackExpirationConfiguredBy;
            o.ackExpirationDays = ackExpirationDays;
            o.ackScope = ackScope;
            o.acknowledgeDate = acknowledgeDate;
            o.ancestorPkg = ancestorPkg;
            o.aquaScore = aquaScore;
            o.aquaScoreClassification = aquaScoreClassification;
            o.aquaScoringSystem = aquaScoringSystem;
            o.aquaSeverity = aquaSeverity;
            o.aquaSeverityClassification = aquaSeverityClassification;
            o.aquaVectors = aquaVectors;
            o.auditEventsCount = auditEventsCount;
            o.blockEventsCount = blockEventsCount;
            o.classification = classification;
            o.description = description;
            o.digest = digest;
            o.exploitReference = exploitReference;
            o.exploitType = exploitType;
            o.firstFoundDate = firstFoundDate;
            o.fixVersion = fixVersion;
            o.imageName = imageName;
            o.lastFoundDate = lastFoundDate;
            o.modificationDate = modificationDate;
            o.name = name;
            o.nvdCvss2Score = nvdCvss2Score;
            o.nvdCvss2Vectors = nvdCvss2Vectors;
            o.nvdCvss3Score = nvdCvss3Score;
            o.nvdCvss3Severity = nvdCvss3Severity;
            o.nvdCvss3Vectors = nvdCvss3Vectors;
            o.nvdSeverity = nvdSeverity;
            o.nvdUrl = nvdUrl;
            o.os = os;
            o.osVersion = osVersion;
            o.permission = permission;
            o.publishDate = publishDate;
            o.registry = registry;
            o.repository = repository;
            o.resourceArchitecture = resourceArchitecture;
            o.resourceCpe = resourceCpe;
            o.resourceFormat = resourceFormat;
            o.resourceHash = resourceHash;
            o.resourceLicenses = resourceLicenses;
            o.resourceName = resourceName;
            o.resourcePath = resourcePath;
            o.resourceType = resourceType;
            o.resourceVersion = resourceVersion;
            o.severityClassification = severityClassification;
            o.solution = solution;
            o.temporalVector = temporalVector;
            o.vPatchAppliedBy = vPatchAppliedBy;
            o.vPatchAppliedOn = vPatchAppliedOn;
            o.vPatchEnforcedBy = vPatchEnforcedBy;
            o.vPatchEnforcedOn = vPatchEnforcedOn;
            o.vPatchPolicyEnforce = vPatchPolicyEnforce;
            o.vPatchPolicyName = vPatchPolicyName;
            o.vPatchRevertedBy = vPatchRevertedBy;
            o.vPatchRevertedOn = vPatchRevertedOn;
            o.vPatchStatus = vPatchStatus;
            o.vendorCvss2Score = vendorCvss2Score;
            o.vendorCvss2Vectors = vendorCvss2Vectors;
            o.vendorSeverity = vendorSeverity;
            o.vendorStatement = vendorStatement;
            o.vendorUrl = vendorUrl;
            return o;
        }
    }
}
