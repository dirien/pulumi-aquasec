// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aquasec from "@pulumi/aquasec";
 *
 * const groups = aquasec.getEnforcerGroups({
 *     groupId: "IacGroup",
 * });
 * export const groupDetails = groups;
 * ```
 */
export function getEnforcerGroups(args: GetEnforcerGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcerGroupsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aquasec:index/getEnforcerGroups:getEnforcerGroups", {
        "forensics": args.forensics,
        "groupId": args.groupId,
        "hostForensics": args.hostForensics,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnforcerGroups.
 */
export interface GetEnforcerGroupsArgs {
    /**
     * Select Enabled to send activity logs in your containers to the Aqua Server for forensics purposes.
     */
    forensics?: boolean;
    /**
     * The ID of the Enforcer group.
     */
    groupId: string;
    /**
     * Select Enabled to send activity logs in your host to the Aqua Server for forensics purposes.
     */
    hostForensics?: boolean;
}

/**
 * A collection of values returned by getEnforcerGroups.
 */
export interface GetEnforcerGroupsResult {
    /**
     * Selecting this option will allow the KubeEnforcer to block the deployment of container images that have failed any of these Container Runtime Policy controls:\
     * 			* Block Non-Compliant Images\
     * 			* Block Non-Compliant Workloads\
     * 			* Block Unregistered Images\
     * 			This functionality can work only when the KubeEnforcer is deployed in Enforce mode.
     */
    readonly admissionControl: boolean;
    /**
     * Allow kube enforcer audit.
     */
    readonly allowKubeEnforcerAudit: boolean;
    /**
     * List of application names to allow on the hosts. if provided, only containers of the listed applications will be allowed to run.
     */
    readonly allowedApplications: string[];
    /**
     * List of label names to allow on the hosts.
     */
    readonly allowedLabels: string[];
    /**
     * List of registry names to allow on the hosts.
     */
    readonly allowedRegistries: string[];
    /**
     * This setting is available only when you have license for `Advanced Malware Protection`. Send true to make use of the license and enable the `Real-time Malware Protection` control in the Host Runtime policies.
     */
    readonly antivirusProtection: boolean;
    /**
     * Aqua server version
     */
    readonly aquaVersion: string;
    /**
     * Agent will send extra audit messages to the server for success operations from inside the container (runtime).
     */
    readonly auditAll: boolean;
    /**
     * This option is applicable only if `Enable Pod Enforcer injection` is selected. Select this option if you want Aqua Enterprise to copy the secrets defined above to the Pod Enforcer namespace and container. Otherwise, you can choose to copy these secrets by other means.
     */
    readonly autoCopySecrets: boolean;
    /**
     * This option is available only if `Enable workload discovery` is selected. If selected, the KubeEnforcer will add previously unknown image registries from the cluster to Aqua.
     */
    readonly autoDiscoverConfigureRegistries: boolean;
    /**
     * When this option is selected, the KubeEnforcer will discover workloads on its cluster.
     */
    readonly autoDiscoveryEnabled: boolean;
    /**
     * This option is available only if `Enable workload discovery` is selected. If selected, the KubeEnforcer will automatically register images running as workloads (and scan the discovered images for security issues).
     */
    readonly autoScanDiscoveredImagesRunningContainers: boolean;
    /**
     * If `Enabled`, detects suspicious activity in your containers and displays potential security threats in the Incidents and Audits pages.
     */
    readonly behavioralEngine: boolean;
    /**
     * This applies only if both `Enable admission control` and Enforce mode are set. This additional option must be selected for admission control to work if the KubeEnforcer is not connected to any Gateway. If this option is not selected, admission control will be disabled; this will have no effect on containers already running.
     */
    readonly blockAdmissionControl: boolean;
    /**
     * The installation command.
     */
    readonly commands: outputs.GetEnforcerGroupsCommand[];
    /**
     * Number of connected enforcers in the enforcer group.
     */
    readonly connectedCount: number;
    /**
     * When set to `True` applies Container Runtime Policies, Image Profiles, and Firewall Policies to containers.
     */
    readonly containerActivityProtection: boolean;
    /**
     * This setting is available only when you have license for `Advanced Malware Protection`. Send true to make use of the license and enable the `Real-time Malware Protection` control in the Container Runtime policies.
     */
    readonly containerAntivirusProtection: boolean;
    /**
     * A description for the Aqua Enforcer group.
     */
    readonly description: string;
    /**
     * Number of disconnected enforcers in the enforcer group.
     */
    readonly disconnectedCount: number;
    /**
     * Whether the enforce mode is enabled on the Enforcers.
     */
    readonly enforce: boolean;
    /**
     * The specific Aqua Enforcer product image (with image tag) to be deployed.
     */
    readonly enforcerImageName: string;
    /**
     * Select Enabled to send activity logs in your containers to the Aqua Server for forensics purposes.
     */
    readonly forensics?: boolean;
    /**
     * Gateway Address
     */
    readonly gatewayAddress: string;
    /**
     * Gateway Name
     */
    readonly gatewayName: string;
    /**
     * List of Aqua gateway IDs for the Enforcers.
     */
    readonly gateways: string[];
    /**
     * The ID of the Enforcer group.
     */
    readonly groupId: string;
    /**
     * Number of high vulnerabilities in the enforcers that in this enforcer group.
     */
    readonly highVulns: number;
    /**
     * When set to `True` enables host scanning and respective Host Assurance controls.
     */
    readonly hostAssurance: boolean;
    /**
     * When set to `True` enables these Host Runtime Policy controls: `OS Users and Groups Allowed` and `OS Users and Groups Blocked`
     */
    readonly hostBehavioralEngine: boolean;
    /**
     * Select Enabled to send activity logs in your host to the Aqua Server for forensics purposes.
     */
    readonly hostForensics?: boolean;
    /**
     * When set to `True` applies Firewall Policies to hosts, and allows recording network maps for Aqua services. The Network Firewall setting must be disabled when deploying the Aqua Enforcer on a machine running Rocky Linux. See https://docs.aquasec.com/docs/platform-support-limitations-rocky-linux for further information
     */
    readonly hostNetworkProtection: boolean;
    /**
     * The OS type for the host
     */
    readonly hostOs: string;
    /**
     * When set to `True` enables all Host Runtime Policy controls except for `OS Users and Groups Allowed` and `OS Users and Groups Blocked`.
     */
    readonly hostProtection: boolean;
    /**
     * When set to `True` enables these Host Runtime Policy controls: `OS Users and Groups Allowed` and `OS Users and Groups Blocked`
     */
    readonly hostUserProtection: boolean;
    /**
     * Number of enforcers in the enforcer group.
     */
    readonly hostsCount: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * When Set to `True` enables selected controls: Container Runtime Policy (`Block Non-Compliant Images`, `Block Unregistered Images`, and `Registries Allowed`) and Default Image Assurance Policy (`Images Blocked`).
     */
    readonly imageAssurance: boolean;
    /**
     * Enforcer install command
     */
    readonly installCommand: string;
    /**
     * See https://docs.aquasec.com/docs/securing-kubernetes-applications#section-configuration-hardening, The KubeEnforcer can deploy the Aqua Security kube-bench open-source product to perform Kubernetes CIS benchmark testing of nodes.
     * 			This field specifies the path and file name of the kube-bench product image for the KubeEnforcer to deploy; it will be filled in automatically. You can optionally enter a different value.
     */
    readonly kubeBenchImageName: string;
    /**
     * The last date and time the batch token was updated in UNIX time.
     */
    readonly lastUpdate: number;
    /**
     * Name for the batch install record.
     */
    readonly logicalName: string;
    /**
     * Number of low vulnerabilities in the enforcers that in this enforcer group.
     */
    readonly lowVulns: number;
    /**
     * Number of medium vulnerabilities in the enforcers that in this enforcer group.
     */
    readonly medVulns: number;
    /**
     * This option is applicable only if `Enable Pod Enforcer injection` is selected.
     */
    readonly microEnforcerCertsSecretsName: string;
    /**
     * This option is applicable only if `Enable Pod Enforcer injection` is selected. This field specifies the path and file name of the KubeEnforcer product image to be deployed; it will be filled in automatically. You can optionally enter a different value.
     */
    readonly microEnforcerImageName: string;
    /**
     * This applies only if both `Enable admission control` and Enforce mode are set. This additional option must be selected for admission control to work if the KubeEnforcer is not connected to any Gateway. If this option is not selected, admission control will be disabled; this will have no effect on containers already running.
     */
    readonly microEnforcerInjection: boolean;
    /**
     * This option is applicable only if `Enable Pod Enforcer injection` is selected.
     */
    readonly microEnforcerSecretsName: string;
    /**
     * Number of negligible vulnerabilities in the enforcers that in this enforcer group.
     */
    readonly negVulns: number;
    /**
     * When set to `True` applies Firewall Policies to containers, and allows recording network maps for Aqua services. The Network Firewall setting must be disabled when deploying the Aqua Enforcer on a machine running Rocky Linux. See https://docs.aquasec.com/docs/platform-support-limitations-rocky-linux for further information.
     */
    readonly networkProtection: boolean;
    /**
     * The orchestrator for which you are creating the Enforcer group.
     */
    readonly orchestrators: outputs.GetEnforcerGroupsOrchestrator[];
    /**
     * pas deployment link
     */
    readonly pasDeploymentLink: string;
    /**
     * Permission Action
     */
    readonly permission: string;
    /**
     * When set to `True` allows Enforcers to be discovered in the Risk Explorer.
     */
    readonly riskExplorerAutoDiscovery: boolean;
    /**
     * Function Runtime Policy that will applay on the nano enforcer.
     */
    readonly runtimePolicyName: string;
    /**
     * The container runtime environment.
     */
    readonly runtimeType: string;
    /**
     * When set to `True` configures Enforcers to discover local host images. Discovered images will be listed under Images > Host Images, as well as under Infrastructure (in the Images tab for applicable hosts).
     */
    readonly syncHostImages: boolean;
    /**
     * When set to `True` allows profiling and monitoring system calls made by running containers.
     */
    readonly syscallEnabled: boolean;
    /**
     * The batch install token.
     */
    readonly token: string;
    /**
     * Enforcer Type.
     */
    readonly type: string;
    /**
     * When set to `True` applies User Access Control Policies to containers. Note that Aqua Enforcers must be deployed with the AQUA*RUNC*INTERCEPTION environment variable set to 0 in order to use User Access Control Policies.
     */
    readonly userAccessControl: boolean;
}

export function getEnforcerGroupsOutput(args: GetEnforcerGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcerGroupsResult> {
    return pulumi.output(args).apply(a => getEnforcerGroups(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcerGroups.
 */
export interface GetEnforcerGroupsOutputArgs {
    /**
     * Select Enabled to send activity logs in your containers to the Aqua Server for forensics purposes.
     */
    forensics?: pulumi.Input<boolean>;
    /**
     * The ID of the Enforcer group.
     */
    groupId: pulumi.Input<string>;
    /**
     * Select Enabled to send activity logs in your host to the Aqua Server for forensics purposes.
     */
    hostForensics?: pulumi.Input<boolean>;
}
